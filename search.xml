<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[ArcGIS Runtime Android查看Shapefile几何类型]]></title>
    <url>%2F2019%2F01%2F11%2FArcGIS-Runtime-Android%E6%9F%A5%E7%9C%8BShapefile%E5%87%A0%E4%BD%95%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[标签 ： 【参考链接】http://zhihu.esrichina.com.cn/question/19622 【问题描述】 调用ShapefileFeatureTable.getGeometryType返回几何类型是Unknown。 【解决办法】：这一问题和ArcGIS Runtime SDK 100系列中的Loadable异步加载机制有关系，需要在加载完成的回调函数中进行判断12345678shapefileFeatureTable = new ShapefileFeatureTable(Environment.getExternalStorageDirectory().getAbsolutePath() + /ArcGIS/shapefile/center.shp);shapefileFeatureTable.loadAsync();shapefileFeatureTable.addDoneLoadingListener(new Runnable() &#123; @Override public void run() &#123; System.out.println(shapefileFeatureTable.getGeometryType()); &#125;&#125;);]]></content>
      <categories>
        <category>ArcGIS</category>
        <category>ArcGIS Runtime for Android</category>
      </categories>
      <tags>
        <tag>ArcGIS</tag>
        <tag>ArcGIS Runtime</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【转载】ArcGIS Runtime SDK for Android开发笔记》——离在线一体化技术：离线矢量数据编辑]]></title>
    <url>%2F2019%2F01%2F11%2F%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91ArcGIS-Runtime-SDK-for-Android%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%E3%80%8B%E2%80%94%E2%80%94%E7%A6%BB%E5%9C%A8%E7%BA%BF%E4%B8%80%E4%BD%93%E5%8C%96%E6%8A%80%E6%9C%AF-%E7%A6%BB%E7%BA%BF%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E7%BC%96%E8%BE%91%2F</url>
    <content type="text"><![CDATA[【原文链接：https://www.cnblogs.com/gis-luq/p/5858055.html】 1、前言在上一篇我们已经实现了离线地理数据库的下载，这一篇我们着重介绍离线数据库的加载与编辑。 由于ArcGIS Runtime SDK for Android 10.2.X版本并没提供要素绘制功能，所以本篇中的要素绘制部分基于之前开源的Drawtools3.0工具实现。 本DEMO主要实现了：离线地理数据库加载、要素样式模板加载，要素新建、要素选择并开启编辑状态、要素删除等操作。由于内容较多涉及编辑部分仅详细介绍对Geodatabase的要素添加、要素删除、要素更新部分，其余请自行查阅源代码。 转载请注明出处：http://www.cnblogs.com/gis-luq/p/5858055.html 2、离线要素编辑实现过程2.1、加载本地离线要素ArcGIS Runtime SDK for Android中提供了具体的Geodatabase类和FeatureLayer图层来加载.geodatabase文件，常用的类包括Geodatabase、GeodatabaseFeatureTable、GeodatabaseFeature、GeodatabaseFeatureServiceTable等，分别用来打开geodatabase数据文件、获取要素图层、获取图层中的具体要素，以及获取在线的要素服务。具体来讲，加载.geodatabase文件的步骤有如下几步： 实例化一个Geodatabase对象，这个类有两个构造函数，都需要指定本地数据库的存储路径； 创建一个GeodatabaseFeatureTable对象实例，用来获取需要的图层； 创建一个FeatureLayer来存储获取的图层，并将获取的图层加载到地图中； 调用dispose()方式释放资源。12345678910111213141516171819/** * 读取Geodatabase中离线地图信息* @param geodatabsePath 离线Geodatabase文件路径 */private void addFeatureLayer(String geodatabsePath) &#123; Geodatabase localGdb = null; try &#123; localGdb = new Geodatabase(geodatabsePath); &#125; catch (FileNotFoundException e) &#123; e.printStackTrace(); &#125; layerList = new ArrayList&lt;&gt;(); // 添加FeatureLayer到MapView中 if (localGdb != null) &#123; for (GeodatabaseFeatureTable gdbFeatureTable : localGdb.getGeodatabaseTables()) &#123; if (gdbFeatureTable.hasGeometry())&#123; FeatureLayer layer = new FeatureLayer(gdbFeatureTable); mMapView.addLayer(layer); &#125; &#125; &#125;&#125; 2.2、加载本地要素样式模板 绘制要素时往往会需要知道待绘制要素的图层名称以及要素的符号化样式，这里我们以geodatabse中的FeatureLayer为例演示要素样式模板获取流程。 1234567891011121314151617181920212223/** * 添加要素绘制样式模板 * 获取图层要素模板并添加到featureTempleteView * @param layer */private void addFeatureTemplate(FeatureLayer layer) &#123; List&lt;FeatureTemplate&gt; featureTemp = ((GeodatabaseFeatureTable) layer.getFeatureTable()).getFeatureTemplates(); for (FeatureTemplate featureTemplate : featureTemp) &#123; GeodatabaseFeature g = null; try &#123; g = ((GeodatabaseFeatureTable) layer.getFeatureTable()).createFeatureWithTemplate(featureTemplate, null); Renderer renderer = layer.getRenderer(); Symbol symbol = renderer.getSymbol(g); float scale = context.getResources().getDisplayMetrics().density; int widthInPixels = (int) (35 * scale + 0.5f); Bitmap bitmap = SymbolHelper.getLegendImage(symbol, widthInPixels, widthInPixels); //将要素样式模板赋值给imgButton ImageButton imageButton = new ImageButton(context); imageButton.setImageBitmap(bitmap); imageButton.setTag(layer);//保存当前待编辑图层 ((LinearLayout)featureTempleteView).addView(imageButton);//添加到要素样式模板列表 imageButton.setOnClickListener(new ImageButtonOnClickListener()); &#125; catch (TableException e) &#123; e.printStackTrace(); Toast.makeText(MainActivity.this, "Error：" + e.getLocalizedMessage(), Toast.LENGTH_SHORT).show(); &#125; &#125;&#125; 2.2 编辑本地离线要素要素编辑最核心的是FeatureTable中的增删改方法，通过这些方法可以实现本地数据库中要素编辑操作。 FeatureTable中的常用方法如下： addFeature):增加本地要素 addFeatures):一次添加多个要素到离线数据库中 deleteFeature):删除本地要素 deleteFeatures):删除多个本地要素 queryFeatures):查询本地要素 updateFeature):更新要素到本地 updateFeatures):更新多个要素到本地 2.2.1 要素添加12345678private FeatureLayer selectFeatureLayer;//当前选中图层 private Graphic selectGraphic = null;//待添加要素（零时图层中获取） GeodatabaseFeatureTable geodatabaseFeatureTable = (GeodatabaseFeatureTable)selectFeatureLayer.getFeatureTable(); GeodatabaseFeature gdbFeature = new GeodatabaseFeature(null, selectGraphic.getGeometry(), geodatabaseFeatureTable); long fid = geodatabaseFeatureTable.addFeature(gdbFeature);// 添加要素 Log.d(TAG,&quot;要素添加成功，Feature ID：&quot;+fid);&#125; catch (TableException e) &#123; e.printStackTrace();&#125; 2.2.2 要素删除12345678910private FeatureLayer selectFeatureLayer;//当前选中图层private Feature selectFeature = null;//当前选中要素GeodatabaseFeatureTable geodatabaseFeatureTable = (GeodatabaseFeatureTable)selectFeatureLayer.getFeatureTable(); try&#123; if (selectFeature!=null)&#123; eodatabaseFeatureTable.deleteFeature(selectFeature.getId());//删除要素 &#125;&#125; catch (TableException e) &#123; e.printStackTrace();&#125; 2.2.3 要素矢量信息更新123456789private FeatureLayer selectFeatureLayer;//当前选中图层 private Feature selectFeature = null;//当前选中要素private Graphic selectGraphic = null;//待更新要素（零时图层中获取）try &#123; GeodatabaseFeatureTable geodatabaseFeatureTable = (GeodatabaseFeatureTable)selectFeatureLayer.getFeatureTable(); geodatabaseFeatureTable.updateFeature(selectFeature.getId(),selectGraphic.getGeometry());//更新要素 Log.d(TAG,&quot;要素更新成功&quot;);&#125; catch (TableException e) &#123; e.printStackTrace();&#125; 扩展说明：如何选中要素，以及如何处理具有压盖关系的要素选择问题？针对这两个问题我们一并处理，首先扩展MapOnTouchListener类，实现长按出现放大镜，并选中要素。选中要素时我们采用遍历当前所有图层的方式，找出每个图层中第一个被选中的要素，然后弹窗提示供用户选择。 123456//全局定义信息private List&lt;FeatureLayer&gt; layerList;//矢量图层列表private GraphicsLayer graphicsLayer = null;//零时图层private FeatureLayer selectFeatureLayer;//当前选中图层private Graphic selectGraphic = null;//当前选中要素（零时图层）private Feature selectFeature = null;//当前选中要素 要素选中扩展事件。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105/** * 地图窗口默认Touch事件 * 支持长按放大镜选种要素 */public class MapSelectFeatureOnTouchListener extends MapOnTouchListener&#123; public MapSelectFeatureOnTouchListener(Context context, MapView view) &#123; super(context, view); &#125; @Override public boolean onLongPressUp(MotionEvent point) &#123; handleTap(point); //长按放大镜选择事件 super.onLongPressUp(point); return true; &#125; @Override public boolean onSingleTap(final MotionEvent e) &#123; //单击响应事件 return true; &#125; /** * 获取当前选中要素 * @param point */ private void handleTap(MotionEvent point) &#123; MotionEvent screePoint = point; //选中图层信息 final List&lt;SelectFeatureInfo&gt; selectFeatureInfoList = new ArrayList&lt;&gt;(); //记录当前选中要素信息，涉及多个图层情况 for (int i=0;i&lt;layerList.size();i++)&#123; FeatureLayer featureLayer = layerList.get(i); featureLayer.setSelectionColor(Color.YELLOW); featureLayer.setSelectionColorWidth(10); long[] selids = featureLayer.getFeatureIDs(screePoint.getX(), screePoint.getY(), 1); if (selids.length &gt;= 1) &#123; SelectFeatureInfo selectFeatureInfo = new SelectFeatureInfo(); selectFeatureInfo.featureLayer = featureLayer; selectFeatureInfo.selectFeatureID = selids[0]; selectFeatureInfoList.add(selectFeatureInfo); &#125; &#125; //根据待选图层确定是否弹窗选择 if(selectFeatureInfoList.size()&gt;1)&#123; //当前选中要素大于1个图层 AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this); builder.setTitle(&quot;请确认选择哪个图层要素？&quot;); //指定下拉列表的显示数据 final String[] layerNamelist = getSelectFeatureInfoListName(selectFeatureInfoList); //设置一个下拉的列表选择项 builder.setItems(layerNamelist, new DialogInterface.OnClickListener() &#123; @Override public void onClick(DialogInterface dialog, int which) &#123; Toast.makeText(MainActivity.this, &quot;选择的图层为：&quot; + layerNamelist[which], Toast.LENGTH_SHORT).show(); SelectFeatureInfo selectFeaInfo = getFeatureLayerbyName(selectFeatureInfoList,layerNamelist[which]); setSelectFeature(selectFeaInfo);//根据选中图层信息选中当前要素 &#125; &#125;); builder.show(); &#125;else if(selectFeatureInfoList.size()==1) &#123; SelectFeatureInfo selectFeaInfo = selectFeatureInfoList.get(0); setSelectFeature(selectFeaInfo);//根据选中图层信息选中当前要素 &#125; &#125; /** * 设置选中图层的要素选中信息 * @param selectFeaInfo 待选图层信息 */ private void setSelectFeature(SelectFeatureInfo selectFeaInfo) &#123; clearFeatureSelection();//设置选中状态前，清空已选择要素 selectFeaInfo.featureLayer.selectFeature(selectFeaInfo.selectFeatureID); selectFeatureLayer = selectFeaInfo.featureLayer; selectFeature = selectFeatureLayer.getFeature(selectFeaInfo.selectFeatureID); switch (selectFeature.getGeometry().getType())&#123; case POINT: case MULTIPOINT: selectGraphic = new Graphic(selectFeature.getGeometry(), DrawSymbol.markerSymbol, null); break; case LINE: case POLYLINE: selectGraphic = new Graphic(selectFeature.getGeometry(), DrawSymbol.mLineSymbol,null); break; case ENVELOPE: case POLYGON: selectGraphic = new Graphic(selectFeature.getGeometry(), DrawSymbol.mFillSymbol, null); break; default: break; &#125; &#125; /** * 通过图层名称获取要素 * @param name 图层名称 * @return 选中图层信息 */ private SelectFeatureInfo getFeatureLayerbyName(List&lt;SelectFeatureInfo&gt; selectFeatureInfoList,String name)&#123; SelectFeatureInfo selectinfo= null; for (int i=0;i&lt;selectFeatureInfoList.size();i++)&#123; FeatureLayer tmplayer = selectFeatureInfoList.get(i).featureLayer; if (tmplayer.getName().equals(name))&#123; selectinfo = selectFeatureInfoList.get(i);//选中图层信息 &#125; &#125; return selectinfo; &#125; /** * 获取待选择要素列表名称 * @param selectFeatureInfoList 待选中要素列表信息 * @return */ private String[] getSelectFeatureInfoListName(List&lt;SelectFeatureInfo&gt; selectFeatureInfoList) &#123; List&lt;String&gt; lsname = new ArrayList&lt;&gt;(); for (int i=0;i&lt;selectFeatureInfoList.size();i++)&#123; lsname.add(selectFeatureInfoList.get(i).featureLayer.getName()); &#125; return lsname.toArray(new String[lsname.size()]); &#125; /** * 记录当前选中要素信息 */ public class SelectFeatureInfo&#123; public FeatureLayer featureLayer ;//当前选中要素 public long selectFeatureID ;//当前选中要素ID &#125;&#125; 3、完整代码完整代码不定期更新，具体请查阅DEMOt源代码，托管地址：http://git.oschina.net/gis-luq/RuntimeOfflineEdit 4、运行后编辑结果（以备同步测试使用） 转载请注明出处：http://www.cnblogs.com/gis-luq/p/5858055.html 文章若无特殊说明均为原创，原创作品，允许转载，转载时请务必以超链接形式标明文章出处、作者信息和本声明。博客：http://www.cnblogs.com/gis-luq​ 作者：gis-luq 邮箱：luqiang.gis@foxmail.com]]></content>
      <categories>
        <category>ArcGIS</category>
        <category>ArcGIS Runtime for Android</category>
      </categories>
      <tags>
        <tag>ArcGIS</tag>
        <tag>ArcGIS Runtime</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《ArcGIS Runtime SDK for Android开发笔记》——离在线一体化技术：离线矢量数据下载]]></title>
    <url>%2F2019%2F01%2F11%2F%E3%80%8AArcGIS-Runtime-SDK-for-Android%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%E3%80%8B%E2%80%94%E2%80%94%E7%A6%BB%E5%9C%A8%E7%BA%BF%E4%B8%80%E4%BD%93%E5%8C%96%E6%8A%80%E6%9C%AF-%E7%A6%BB%E7%BA%BF%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%2F</url>
    <content type="text"><![CDATA[【原文链接：http://www.cnblogs.com/gis-luq/p/5858048.html 】 1、前言1.1、环境准备： ArcGIS for Desktop 10.4.1（10.2.1以上版本即可） ArcGIS for Server 10.4.1 （10.2.1以上版本即可） PostgreSQL、Microsoft SQL Server、或 Oracle 设置企业级地理数据库。 1.2、发布具有同步能力的FeatureService服务 过程参考 数据制作篇：发布具有同步能力的FeatureService服务 一文。 转载请注明出处：http://www.cnblogs.com/gis-luq/p/5858048.html 2、demo实现过程ArcGIS Runtime SDK 配置实现过程略：具体请参考： 基于Android Studio构建ArcGIS Android开发环境 基于Android Studio构建ArcGIS Android开发环境（离线部署） 2.1、Demo UI实现activity_main.xml 1234567891011121314151617181920212223242526272829303132333435363738394041&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; xmlns:tools=&quot;http://schemas.android.com/tools&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; tools:context=&quot;com.example.downgdb.MainActivity&quot;&gt; &lt;!-- MapView --&gt; &lt;com.esri.android.map.MapView android:id=&quot;@+id/map&quot; android:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;fill_parent&quot; mapoptions.MapType=&quot;Topo&quot; mapoptions.ZoomLevel=&quot;5&quot; mapoptions.center=&quot;28.671298, 104.066404&quot; /&gt; &lt;LinearLayout android:orientation=&quot;horizontal&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot; android:padding=&quot;10dp&quot; android:id=&quot;@+id/linearLayout&quot; android:background=&quot;@color/primary_material_light&quot;&gt; &lt;EditText android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; android:id=&quot;@+id/editTextGDBUrl&quot; android:layout_alignParentTop=&quot;true&quot; android:layout_alignParentRight=&quot;true&quot; android:layout_alignParentEnd=&quot;true&quot; android:layout_weight=&quot;1&quot; android:text=&quot;http://192.168.1.212:6080/arcgis/rest/services/testdata/FeatureServer&quot; android:inputType=&quot;textUri&quot; /&gt; &lt;Button android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:text=&quot;数据下载&quot; android:id=&quot;@+id/btnDownGDB&quot; /&gt; &lt;/LinearLayout&gt;&lt;/RelativeLayout&gt; 2.2、在Android清单文件AndroidManifest.xml中增加网络及存储访问权限12&lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; /&gt; 2.3、实现离线地理数据库下载逻辑基本思路： 设置.geodatabase文件存储路径 根据FeatureService服务获取FeatureServiceInfo服务参数信息 根据FeatureServiceInfo信息创建离线地理数据库文件、 从已经下载的本地Geodatabase文件中加载矢量数据 下载数据的核心功能类说明： GeodatabaseSyncTask类，实现下载同步功能 GenerateGeodatabaseParameters，下载数据时所需的参数对象，该类构造函数一共有7个根据需要选择： 本次示例代码主要用到以下三个参数： featureServerInfo 服务参数信息 geodatabaseExtent 地图下载区域范围 geodatabaseSpatialReference 地图空间参考 CallbackListener，完成GDB数据库下载的回调函数类，在该回调中我们只可以执行一些操作，如示例里在回调中删除了在线的服务图层，加载离线的数据图层到地图上进行显示。通过Geodatabase本地数据库可以获取要素图层列表List&lt;GdbFeatureTable&gt;对象，通过newFeatureLayer(gdbFeatureTable)来创建一个离线要素图层进行要素显示。 GeodatabaseStatusCallback，本地数据库回调状态类，在数据下载过程中会有很多状态改变，各种状态改变时都会走这个类的回调函数。 GeodatabaseTask.generateGeodatabase，通过该方法生成离线数据库和相应的要素表，方法需要传递上面介绍的三个参数和一个数据库存储的路径。 完整代码示例：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141package com.example.downgdb; import android.app.Activity; import android.app.ProgressDialog; import android.content.Context; import android.os.Environment; import android.support.v7.app.AppCompatActivity; import android.os.Bundle; import android.util.Log; import android.view.View; import android.view.WindowManager; import android.widget.Button; import android.widget.EditText; import com.esri.android.map.FeatureLayer; import com.esri.android.map.MapView; import com.esri.core.ags.FeatureServiceInfo; import com.esri.core.geodatabase.Geodatabase; import com.esri.core.geodatabase.GeodatabaseFeatureTable; import com.esri.core.map.CallbackListener; import com.esri.core.tasks.geodatabase.GenerateGeodatabaseParameters; import com.esri.core.tasks.geodatabase.GeodatabaseStatusCallback; import com.esri.core.tasks.geodatabase.GeodatabaseStatusInfo; import com.esri.core.tasks.geodatabase.GeodatabaseSyncTask; import java.io.File; import java.io.FileNotFoundException; import java.util.ArrayList; public class MainActivity extends AppCompatActivity &#123; protected static final String TAG = &quot;downGDB&quot;; private Context context; private MapView mMapView;//地图容器 private EditText editTextDownGDBUrl;//GDB地址 private Button btnDownGDB;//下载GDB private static String onlineFeatureLayerUrl;//在线FeatureLayer地址 private static String localGdbFilePath;//离线GDB地址 private GeodatabaseSyncTask gdbSyncTask;//离线地理数据库下载Task private ProgressDialog mProgressDialog;//状态框 @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); context = this; // 默认软键盘不弹出 getWindow().setSoftInputMode( WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN); this.mMapView = (MapView)findViewById(R.id.map); this.editTextDownGDBUrl = (EditText)findViewById(R.id.editTextGDBUrl); //获取并设置在线服务地址 this.onlineFeatureLayerUrl = this.editTextDownGDBUrl.getText().toString(); mProgressDialog = new ProgressDialog(context); //设置点击进度对话框外的区域对话框不消失 mProgressDialog.setCanceledOnTouchOutside(false); mProgressDialog.setTitle(&quot;正在创建离线地理数据库副本&quot;); //绑定按钮设置下载事件 btnDownGDB = (Button)this.findViewById(R.id.btnDownGDB); btnDownGDB.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View v) &#123; downloadData(onlineFeatureLayerUrl);//下载离线数据 &#125; &#125;); &#125; /** * Geodatabase文件存储路径 */ static String createGeodatabaseFilePath() &#123; return Environment.getExternalStorageDirectory().getAbsolutePath() + File.separator + &quot;/RuntimeOfflineEdit&quot; + File.separator + &quot;demo.geodatabase&quot;; &#125; /** * 下载离线地理数据库 * @param url FeatureService服务地址 * 例如：http://192.168.1.212:6080/arcgis/rest/services/testdata/FeatureServer * 支持ArcGIS for Server 10.2.1以上版本，必须开启FeatureServer要素同步功能 */ private void downloadData(String url) &#123; Log.i(TAG, &quot;Create GeoDatabase&quot;); // create a dialog to update user on progress mProgressDialog.show(); gdbSyncTask = new GeodatabaseSyncTask(url, null); gdbSyncTask.fetchFeatureServiceInfo(new CallbackListener&lt;FeatureServiceInfo&gt;() &#123; @Override public void onError(Throwable arg0) &#123; Log.e(TAG, &quot;获取FeatureServiceInfo失败&quot;); &#125; @Override public void onCallback(FeatureServiceInfo fsInfo) &#123; if (fsInfo.isSyncEnabled()) &#123; createGeodatabase(fsInfo); &#125; &#125; &#125;); &#125; /** * 根据FeatureServiceInfo信息创建离线地理数据库文件 * @param featureServerInfo 服务参数信息 */ private void createGeodatabase(FeatureServiceInfo featureServerInfo) &#123; // 生成一个geodatabase设置参数 GenerateGeodatabaseParameters params = new GenerateGeodatabaseParameters( featureServerInfo, mMapView.getMaxExtent(), mMapView.getSpatialReference()); // 下载结果回调函数 CallbackListener&lt;String&gt; gdbResponseCallback = new CallbackListener&lt;String&gt;() &#123; @Override public void onError(final Throwable e) &#123; Log.e(TAG, &quot;创建geodatabase失败&quot;); mProgressDialog.dismiss(); &#125; @Override public void onCallback(String path) &#123; Log.i(TAG, &quot;Geodatabase 路径: &quot; + path); mProgressDialog.dismiss(); loadGeodatabase(path); &#125; &#125;; // 下载状态回调函数 GeodatabaseStatusCallback statusCallback = new GeodatabaseStatusCallback() &#123; @Override public void statusUpdated(final GeodatabaseStatusInfo status) &#123; final String progress = status.getStatus().toString(); //在UI线程更新下载状态 ((Activity)context).runOnUiThread(new Runnable()&#123; @Override public void run() &#123; mProgressDialog.setMessage(&quot;数据下载中，请稍后……&quot;); &#125; &#125;); &#125; &#125;; //设置离线地理数据库存储路径 localGdbFilePath = createGeodatabaseFilePath(); //执行下载Geodatabase数据库 gdbSyncTask.generateGeodatabase(params, localGdbFilePath, false, statusCallback, gdbResponseCallback); &#125; /** * 加载离线地理数据库 * @param path .geodatabse文件路径 */ private void loadGeodatabase(String path) &#123; // 创建一个geodatabase数据库 Geodatabase localGdb = null; try &#123; localGdb = new Geodatabase(path); &#125; catch (FileNotFoundException e) &#123; e.printStackTrace(); &#125; // 添加FeatureLayer到MapView中 if (localGdb != null) &#123; for (GeodatabaseFeatureTable gdbFeatureTable : localGdb.getGeodatabaseTables()) &#123; if (gdbFeatureTable.hasGeometry())&#123; mMapView.addLayer(new FeatureLayer(gdbFeatureTable)); &#125; &#125; &#125; &#125;&#125; 3、Demo运行结果 源代码托管地址：http://git.oschina.net/gis-luq/RuntimeOfflineEdit 4、参考资料https://developers.arcgis.com/android/api-reference/reference/com/esri/core/tasks/geodatabase/package-summary.html http://blog.csdn.net/arcgis_all/article/details/20442663 相关内容列表《ArcGIS Runtime SDK for Android开发笔记》——离在线一体化技术：概述 《ArcGIS Runtime SDK for Android开发笔记》——离在线一体化技术：离线矢量数据下载 《ArcGIS Runtime SDK for Android开发笔记》——离在线一体化技术：离线矢量数据编辑 《ArcGIS Runtime SDK for Android开发笔记》——离在线一体化技术：离线矢量数据同步 《ArcGIS Runtime SDK for Android开发笔记》——数据制作篇：发布具有同步能力的FeatureService服务 文章若无特殊说明均为原创，原创作品，允许转载，转载时请务必以超链接形式标明文章出处、作者信息和本声明。博客：http://www.cnblogs.com/gis-luq​ 作者：gis-luq 邮箱：luqiang.gis@foxmail.com]]></content>
      <categories>
        <category>ArcGIS</category>
        <category>ArcGIS Runtime for Android</category>
      </categories>
      <tags>
        <tag>ArcGIS</tag>
        <tag>ArcGIS Runtime</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在一个项目中同时使用ArcGIS Runtime 和 百度定位SDK]]></title>
    <url>%2F2019%2F01%2F11%2F%E5%9C%A8%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%90%8C%E6%97%B6%E4%BD%BF%E7%94%A8ArcGIS-Runtime-%E5%92%8C-%E7%99%BE%E5%BA%A6%E5%AE%9A%E4%BD%8DSDK%2F</url>
    <content type="text"><![CDATA[【参考链接：https://zhidao.baidu.com/question/2267129986490031988.html】【本文尚未修改编辑，版本号还是老版本】 两个SDK都是将其API库封装成so动态链接库供上层应用（Java）调用，但两者在具体实现上存在差异，也是这个差异导致将两个SDK集成到一个应用中时容易产生强退的bug，这个问题也曾很大的困扰了我一天，特此分享给大家。 ☆ 先看看百度地图 for Android SDK的动态库调用方法： 第一步：在工程里新建libs文件夹，将开发包里的baidumapapi_v2_1_2.jar拷贝到libs根目录下，将libapp_BaiduMapApplib_v2_1_2.so和libvi_voslib.so 拷贝到libs\armeabi目录下（官网demo里已有这三个文件，如果要集成到自己的工程里，就需要自己添加），拷贝完成后的工程目录如下图所示； 注：liblocSDK3.so和locSDK_3.1.jar为百度定位SDK所使用资源，开发者可根据实际需求自行添加。 第二步：在工程属性-&gt;Java Build Path-&gt;Libraries中选择“Add External JARs”，选定baidumapapi_v2_1_2.jar，确定后返回。 通过以上两步操作后，您就可以正常使用百度地图SDK为您提供的全部功能了。 ☆ 再看看ArcGIS for Android SDK的动态库调用方法 其是通过在Eclipse集成开发环境上安装ArcGIS插件来实现的，具体如何安装就不赘述了。当 ArcGIS开发插件安装完成后，在新建工程的选项中就可以看到【ArcGIS Project for Android】和【ArcGIS Samples for Android】的菜单，ArcGIS Android API的开发环境就顺利配置完成了。 然后你可以New –&gt; Project –&gt;ArcGIS Project for Android来新建一个带其动态链接库的Android应用程序。例如创建一个test工程，创建成功后如下图所示。本例采用最新的ArcGIS for Android SDK 10.1。 小结：以上两种方法，从用户便捷性上来说，ArcGIS 更加“智能”一些，将动态链接库添加的工作，直接已经集成到new project里面，对于初学者来说，可以完全忽略这些细节而直接进入关键开发工作；百度地图的SDK相对来说，更加灵活一些，给用户更大的空间。 但也就是这两种方式的差异导致了当两个SDK结合到一个程序里的时候就容易出错。细心的朋友应该可以发现一个问题，百度地图SDK里的动态链接库只有一个armeabi文件夹，但是ArcGIS SDK却有两个文件夹，armeabi和armeabi-v7a，其中均有一个libruntimecore_java.so库文件。 这两个文件夹是何用意呢？armeabi和armeabi-v7a是表示cpu的类型，不同的cpu的特性不一样，armeabi就是针对普通的或旧的arm cpu，armeabi-v7a是针对有浮点运算或高级扩展功能的arm cpu。简单来说，Android为了适应五花八门各式各样的智能终端硬件环境，采用了不同的配置对应不同文件夹的调用模式，好比大家熟悉的不同屏幕dpi会调用不同的图片文件夹，如下图。 那么关键的来了，当我们严格按照两个SDK添加链接库后，百度地图三个so库文件就存放在armeabi文件夹下，而armeabi-v7a文件夹下并没有百度地图相应的so库，但ArcGIS却在两个文件夹下都有相应的so库，这里不得不说，Esri作为GIS、地图领域的世界领头羊，考虑的还是比较细。 然后编译程序时，Eclipse会在两个文件夹里搜索相应的库文件，而只会根据Android手机的具体情况拷贝相应文件夹下的库文件。当今绝大多数的手机已经具备了针对有浮点运算或高级扩展功能的arm cpu，所以在手机根目录下/data/data/(program_name)/lib下只会拷贝armeabi-v7a文件夹下的库文件，而此时并不会有百度地图的so库文件。从而会导致百度地图SDK程序直接崩溃，并报出java.lang.ExceptionInInitializerError错误。 明白了原理，解决办法就十分简单了，将armeabi文件夹下百度地图的so库文件拷贝到armeabi-v7a文件夹下，如下图： 重新clean一下project，重新编译后程序就可以正常调用百度地图和ArcGIS两个SDK库了。 注：这里由于我是直接用的Jcenter仓库中的ArcGIS 10.2.9库，只有三个文件夹，而目前百度定位SDK已经适配了所有类型处理器，所以我的操作是删除百度地图中多出来的几个文件夹。]]></content>
      <categories>
        <category>ArcGIS</category>
        <category>ArcGIS Runtime for Android</category>
      </categories>
      <tags>
        <tag>ArcGIS</tag>
        <tag>ArcGIS Runtime</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git pull 如何强制覆盖本地文件]]></title>
    <url>%2F2019%2F01%2F11%2Fpull-%E5%A6%82%E4%BD%95%E5%BC%BA%E5%88%B6%E8%A6%86%E7%9B%96%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[原文链接：https://vimsky.com/article/3679.html ##【需求】在开发中使用Git的过程中，有时候会有一种需求，要从服务器拉取最新的状态，而本地进行了无关紧要的修改，这时候如果使用git pull命令，会提示本地有未缓存的修改。这时候就需要强制覆盖本地的改变。 ##【最佳解决方案】 重要提示：如果您有任何本地更改，将会丢失。无论是否有–hard选项，任何未被推送的本地提交都将丢失。如果您有任何未被Git跟踪的文件(例如上传的用户内容)，这些文件将不会受到影响。下面是正确的方法：1git fetch --all 然后，你有两个选择：1git reset --hard origin/master 或者如果你在其他分支上：1git reset --hard origin/&lt;branch_name&gt; ###说明：git fetch从远程下载最新的，而不尝试合并或rebase任何东西。 然后git reset将主分支重置为您刚刚获取的内容。 --hard选项更改工作树中的所有文件以匹配origin/master中的文件 在重置之前可以通过从master创建一个分支来维护当前的本地提交：1234git checkout mastergit branch new-branch-to-save-current-commitsgit fetch --allgit reset --hard origin/master 在此之后，所有旧的提交都将保存在new-branch-to-save-current-commits中。然而，没有提交的更改(即使staged)将会丢失。确保存储和提交任何你需要的东西。 ##【次佳解决方案】12git reset --hard HEADgit pull ##【第三种解决方法】 警告：git clean删除所有未跟踪的文件/目录，不能撤消。 有的时候只有clean -f无效。如果你没有跟踪DIRECTORIES，-d选项也需要：123git reset --hard HEADgit clean -f -dgit pull ##【第四种方法】可行的方式是通过使用fetch和merge定义的策略。这应该能使你的本地修改保留下来，只要它们不是你试图强制覆盖的文件之一。 首先做一个你的改变12git add *git commit -a -m &quot;local file server commit message&quot; 然后获取更改并覆盖，如果有冲突12git fetch origin mastergit merge -s recursive -X theirs origin/master “-X”是选项名称，”theirs”是该选项的值。如果存在冲突，则选择使用”their”更改，而不是”your”更改。 ##【第五种方法】这是另外的思路，不建议上文的做法：12git fetch --allgit reset --hard origin/master 而是建议这样做：12git fetch origin mastergit reset --hard origin/master 如果你打算重新设置原点/主分支，没有必要获取所有的遥控器和分支 ##【第六种方法】看起来最好的办法是先做：1git clean 删除所有未跟踪的文件，然后继续使用通常的git pull ... ##【第七种方法】所有这些解决方案的问题是，它们都是太复杂，或者更大的问题是，他们从Web服务器中删除所有未跟踪的文件，这是我们不想要的，因为总是有需要的配置文件服务器，而不是在Git仓库。 这是我们正在使用的最干净的解决方案：12345678910111213141516171819# Fetch the newest codegit fetch# Delete all files which are being added, so there# are no conflicts with untracked filesfor file in `git diff HEAD..origin/master --name-status | awk &apos;/^A/ &#123;print $2&#125;&apos;`do rm -f -- &quot;$file&quot;done# Checkout all files which were locally modifiedfor file in `git diff --name-status | awk &apos;/^[CDMRTUX]/ &#123;print $2&#125;&apos;`do git checkout -- &quot;$file&quot;done# Finally pull all the changes# (you could merge as well e.g. &apos;merge origin/master&apos;)git pull 第一个命令获取最新的数据。 第二个命令检查是否有任何正在添加到存储库的文件，并从本地存储库中删除那些会导致冲突的未跟踪文件。 第三个命令checks-out所有在本地修改的文件。 最后，我们将更新到最新版本，但是这次没有任何冲突，因为repo中的未跟踪文件不再存在，所有本地修改的文件已经与存储库中的相同。]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git随笔]]></title>
    <url>%2F2019%2F01%2F11%2FGit%E9%9A%8F%E7%AC%94%2F</url>
    <content type="text"><![CDATA[##1.推送本地分支到远程仓库1git push 如果远程分支不存在1git push --set-upstream origin [branch_name]]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用Arduino IDE开发ESP8266模块应用]]></title>
    <url>%2F2019%2F01%2F11%2F%E4%BD%BF%E7%94%A8Arduino-IDE%E5%BC%80%E5%8F%91ESP8266%E6%A8%A1%E5%9D%97%E5%BA%94%E7%94%A8%2F</url>
    <content type="text"><![CDATA[##一、添加网址打开Arduino IDE，在文件-&gt;首选项菜单中的附加开发板管理器网址中填写如下网址：1http://arduino.esp8266.com/stable/package_esp8266com_index.json ##二、下载开发板定义打开工具-&gt;开发板-&gt;开发板管理器中输入ESP8266，在结果中选择最新版本，并点击安装。 ##三、选择开发板最后在工具-&gt;开发板根据自己的需求选择对应的型号即可。我个人需要用到WeMos D1 R1开发板。]]></content>
      <categories>
        <category>Arduino</category>
      </categories>
      <tags>
        <tag>物联网</tag>
        <tag>IOT</tag>
        <tag>Arduino</tag>
        <tag>ESP8266</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ArcGIS打开后一片空白]]></title>
    <url>%2F2019%2F01%2F11%2FArcGIS%E6%89%93%E5%BC%80%E5%90%8E%E4%B8%80%E7%89%87%E7%A9%BA%E7%99%BD%2F</url>
    <content type="text"><![CDATA[##问题最近用到ArcGIS10.2版本。把电脑上的10.1版本卸载了之后，重新安装10.2.2版本，打开之后却是一片空白，如下图： ##解决打开资源管理器，在地址栏中输入：1%USERPROFILE%\Application Data\ESRI\Desktop10.2\ArcMap\Templates 如果提示Application Data目录没有权限，参照【https://www.jianshu.com/p/24062f791399】获取所有权，然后再次进入上述目录，找到其中的`Normal.mxt`文件，将其删除。然后重新打开`ArcMap`就可以了。]]></content>
      <categories>
        <category>ArcGIS</category>
      </categories>
      <tags>
        <tag>ArcGIS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ArcObjects开发初探]]></title>
    <url>%2F2019%2F01%2F11%2FArcObjects%E5%BC%80%E5%8F%91%E5%88%9D%E6%8E%A2%2F</url>
    <content type="text"><![CDATA[最近项目中需要用到ArcGIS二次开发，由于本人并不是地理信息专业科班出身，所以使用过程中遇到很多问题不知道怎么去解决，百度良久，在此记录一番！本文随时更新！ ##一、初始化许可ArcObjects是ArcGIS的底层API，基于COM技术搭建，所以能够自然地支持C++，VB，.Net在内的多种语言。然而也因为是基于COM的，所以它的API很是难用（相比.Net framework那样的）。我的系统是Windows 10 专业版 64位+VS 2015+ArcGIS 10.2，考虑到64位的开发环境和运行环境，首先需要在项目中设置平台为x86。 在调用其他ArcObjects API之前，首先得初始化许可。12345678910111213141516171819202122232425262728293031323334353637using ESRI.ArcGIS;using ESRI.ArcGIS.esriSystem;using System;using System.Collections.Generic;using System.Linq;using System.Windows.Forms;namespace 数据处理&#123; static class Program &#123; /// &lt;summary&gt; /// 应用程序的主入口点。 /// &lt;/summary&gt; [STAThread] static void Main() &#123; //绑定Runtime if (!RuntimeManager.Bind(ProductCode.EngineOrDesktop)) &#123; MessageBox.Show(&quot;不能绑定ArcGIS runtime，应用程序即将关闭.&quot;); return; &#125; // 初始化AO许可 var aoi = new AoInitialize(); var s = aoi.Initialize( esriLicenseProductCode.esriLicenseProductCodeEngineGeoDB); if (s == esriLicenseStatus.esriLicenseUnavailable) throw new NotSupportedException(&quot;请求的许可不可用&quot;); Application.EnableVisualStyles(); Application.SetCompatibleTextRenderingDefault(false); Application.Run(new FrmMain()); &#125; &#125;&#125;]]></content>
      <categories>
        <category>ArcGIS</category>
      </categories>
      <tags>
        <tag>ArcGIS</tag>
        <tag>ArcObjects</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows ZIP版MySQL安装方法]]></title>
    <url>%2F2019%2F01%2F11%2FWindows-ZIP%E7%89%88MySQL%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[##【下载地址】https://dev.mysql.com/downloads/mysql/直接下载地址：https://cdn.mysql.com//Downloads/MySQL-8.0/mysql-8.0.13-winx64.zip我用的社区免费版。 ##1.解压下载完成后解压缩，我的解压到了D:\Program Files\mysql-8.0.13-winx64目录下。 ##2.安装 ###2.1 初始化以管理员身份运行cmd，转到MySQL目录下的bin文件夹下：1cd D:\Program Files\mysql-8.0.13-winx64\bin 然后执行初始化命令：1mysqld --initialize 执行这条命令之后，在data目录会生成一系列文件，如图： ###2.2 安装执行如下命令进行安装：1mysqld -install 然后，启动服务：1net start mysql 如果顺利，会提示：12MySQL 服务正在启动...MySQL 服务已经启动成功。 ##3.登陆我用的是MySQL Workbench软件登陆的。 打开软件，选择Database -&gt; Connect to Database...： 连接选择Local instance MySQL，其他默认不变。 关于密码新版本的MySQL在第二步安装启动服务时，会生成一个默认初始密码，这个密码存储在data目录下的`*.err**文件夹中，用记事本打开此文件，找到A temporary password is generated for root@localhost:… …`这一行，后面即为默认临时密码。 将上述方法得到的密码填写到对话框的Store in Vault对话框中：然后点击OK，第一次登陆会提示修改密码，按照提示操作修改即可。]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java连接MySQL问题记录]]></title>
    <url>%2F2019%2F01%2F11%2FJava%E8%BF%9E%E6%8E%A5MySQL%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[最近学习Java服务器开发，需要用到MySQL数据库连接，在此记录一下遇到的问题及解决方案。 ##连接MySQL按照RUNOOB.COM的教程，连接MySQL数据库，Java代码为：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465public class MySQLDemo &#123; // JDBC 驱动名及数据库 URL static final String JDBC_DRIVER = "com.mysql.jdbc.Driver"; static final String DB_URL = "jdbc:mysql://localhost:3306/RUNOOB"; // 数据库的用户名与密码，需要根据自己的设置 static final String USER = "root"; static final String PASS = "123456"; public static void connectTest() &#123; Connection conn = null; Statement stmt = null; try&#123; // 注册 JDBC 驱动 Class.forName(JDBC_DRIVER); // 打开链接 System.out.println("连接数据库..."); conn = DriverManager.getConnection(DB_URL,USER,PASS); // 执行查询 System.out.println(" 实例化Statement对象..."); stmt = conn.createStatement(); String sql; sql = "SELECT id, name, url FROM websites"; ResultSet rs = stmt.executeQuery(sql); // 展开结果集数据库 while(rs.next())&#123; // 通过字段检索 int id = rs.getInt("id"); String name = rs.getString("name"); String url = rs.getString("url"); // 输出数据 System.out.print("ID: " + id); System.out.print(", 站点名称: " + name); System.out.print(", 站点 URL: " + url); System.out.print("\n"); &#125; // 完成后关闭 rs.close(); stmt.close(); conn.close(); &#125;catch(SQLException se)&#123; // 处理 JDBC 错误 se.printStackTrace(); &#125;catch(Exception e)&#123; // 处理 Class.forName 错误 e.printStackTrace(); &#125;finally&#123; // 关闭资源 try&#123; if(stmt!=null) stmt.close(); &#125;catch(SQLException se2)&#123; &#125;// 什么都不做 try&#123; if(conn!=null) conn.close(); &#125;catch(SQLException se)&#123; se.printStackTrace(); &#125; &#125; System.out.println("Goodbye!"); &#125;&#125; 没想到直接运行马上马上就报错了。 ###错误一：Could not create connection to database server - java mysql connector此问题是由于RUNOOB.COM提供的Jar包过期导致无法连接最新版MySQL数据库。 ####【解决方法】下载最新版的Jar包密码： igvz并将代码中的驱动修改一下：12// JDBC 驱动名及数据库 URL static final String JDBC_DRIVER = "com.mysql.cj.jdbc.Driver"; ###错误二：java.lang.ClassNotFoundException: com.mysql.jdbc.Driver解决了错误一后，接着来了错误二，报错代码为：12// 注册 JDBC 驱动Class.forName(JDBC_DRIVER); 此问题是由于tomcat找不到MYSQL JAR包导致的。 ####【解决方法】将上一步下载的mysql-connector-java-8.0.11.jar文件拷贝到tomcat根目录下的lib文件夹中。 ###错误三：java.sql.SQLException: The server time zone value ‘???ú±ê×??±??’ is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.按照错误信息中的提示，在数据库连接字符串中添加serverTimezone=UTC即可解决。1static final String DB_URL = &quot;jdbc:mysql://localhost:3306/RUNOOB?serverTimezone=UTC&quot;; ###警告四：WARN: Establishing SSL connection without server’s identity verification is not recommended.输出控制台一直有这个警告，这是由于MySQL要求服务器有SSL验证。 ####【解决方法】继续修改数据库连接字符串，添加useSSL=false参数：1static final String DB_URL = "jdbc:mysql://localhost:3306/RUNOOB?useSSL=false&amp;serverTimezone=UTC";]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SQLyog连接数据库报错：Plugin caching_sha2_password could not be loaded]]></title>
    <url>%2F2019%2F01%2F11%2FSQLyog%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8A%A5%E9%94%99%EF%BC%9APlugin-caching-sha2-password-could-not-be-loaded%2F</url>
    <content type="text"><![CDATA[##【错误信息】用SQLyog连接MySQL数据库时，第一次连接会报错如下图： ##【解决方法】 ###1.打开cmd登录数据库1mysql -u root -p ###2.进入mysql依次执行如下命令`bat #修改加密规则ALTER USER ‘root‘@’localhost’ IDENTIFIED BY ‘password’ PASSWORD EXPIRE NEVER; #更新用户的密码ALTER USER ‘root‘@’localhost’ IDENTIFIED WITH mysql_native_password BY ‘password’; #刷新权限FLUSH PRIVILEGES; #重置密码ALTER USER ‘root‘@’localhost’ IDENTIFIED BY ‘your_password’;]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>SQLyog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CMD命令提示符改编编码命令]]></title>
    <url>%2F2019%2F01%2F11%2FCMD%E5%91%BD%E4%BB%A4%E6%8F%90%E7%A4%BA%E7%AC%A6%E6%94%B9%E7%BC%96%E7%BC%96%E7%A0%81%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[CMD中修改字符编码的命令为 chcp，以下为帮助文档：12C:\Windows\system32&gt;help chcp 显示或设置活动代码页编号。 CHCP [nnn] nnn指定代码页编号。 不带参数键入 CHCP 以显示活动代码页编号。 输入:1&gt;chcp 65001 设置编码为UTF-8 输入:1chcp 936 设置编码GBK]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>cmd</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[树莓派安装KodExplorer变身私人云桌面]]></title>
    <url>%2F2019%2F01%2F10%2F%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85KodExplorer%E5%8F%98%E8%BA%AB%E7%A7%81%E4%BA%BA%E4%BA%91%E6%A1%8C%E9%9D%A2%2F</url>
    <content type="text"><![CDATA[标签（空格分隔）： 树莓派 KodExplorer 【参考链接】旧手机安装KodExplorer可道云变身云桌面Ubuntu14.04下配置PHP7.0+Apache2+Mysql5.7ubuntu下使用 apt-get install 安装php扩展库mcrypt、curl、gd 本文主要目的是在树莓派上搭建Apache2 + php7.0 环境，并安装KodCLoud实现私人云。因KodExplorer不需要Mysql环境， 所以暂不安装。 【更新软件源仓库】12sudo apt-get updatesudo apt-get upgrade 【安装Apache2】 安装apache2在树莓派上的终端执行如下命令，1sudo apt-get install -y apache2 编辑apache主配置文件/etc/apache2/apache2.conf，修改KeepAlive设置1KeepAlive Off Apache默认的multi-processing模块(MPM ) 是一个event 模块，但是 php默认是使用 prefork模块，禁用event模块，启用prefork模块12sudo a2dismod mpm_eventsudo a2enmod mpm_prefork 重启Apache1sudo service apache2 restart 修改端口进入/etc/apache2/目录下，修改ports.conf文件，添加Listen 端口号即可监听对应端口：12cd /etc/apache2/sudo nano ports.conf 添加内容，每行一条记录:12345678# If you just change the port or add more ports here, you will likely also# have to change the VirtualHost statement in# /etc/apache2/sites-enabled/000-default.confListen 80Listen 8000...其他内容.. 同时，按照文件头部的说明，还要修改/etc/apache2/sites-enabled/000-default.conf文件中的VirtualHost声明12cd /etc/apache2/sites-enabled/sudo nano 000-default.conf 在VirtualHost *:80&gt;节点修改端口号即可：123&lt;VirtualHost *:8000&gt; **其他内容**&lt;/VirtualHost&gt; 【安装PHP7.0】如果系统是jessie，需要假如stretch源才能安装php7，速度相比php5快一倍：1sudo vim /etc/apt/sources.list 添加一行：1deb http://mirrordirector.raspbian.org/raspbian/ stretch main contrib non-free rpi 接着创建一个文件1sudo vi /etc/apt/preferences 添加以下内容123Package: *Pin: release n=jessiePin-Priority: 600 更新源并安装php7.012sudo apt-get updatesudo apt-get install -t stretch php7.0 php7.0-curl php7.0-gd php7.0-fpm php7.0-cli php7.0-opcache php7.0-mbstring php7.0-xml php7.0-zip 安装好之后执行 php -v 可以查看版本。 如果这一步出现公钥问题，参照另一篇文章：https://www.jianshu.com/p/8a1921413fad即可解决问题。 【LAMP】 整合PHP和Apache212sudo apt-get install libapache2-mod-php7.0sudo service apache2 restart 【验证环境】 显示PHP的版本信息 1php -v Apache默认的网站根目录位于/var/www/html/,进入这个目录，并创建info.php 1sudo nano /var/www/html/info.php 写入如下内容：123&lt;?php phpinfo();?&gt; 在浏览器中输入http://localhost/info.php进行验证。【KodExplorer】按照 https://kodcloud.com/download/ 页面的说明，下载KodExplorer并安装：1234cd /var/www/html/wget http://static.kodcloud.com/update/download/kodexplorer4.25.zipunzip kodexplorer4.25.zipchmod -Rf 777 ./* 最后在浏览器输入http://localhost:8000/index.php，如果一切正常即可看到网盘页面。【内网穿透】这一部分不是重点，所以简单介绍一种方法来实现远程访问。从 https://ngrok.com/download 页面下载ngrok，树莓派选择Linux(ARM)版本进行下载。或者从这里下载并上传到树莓派：https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm.zip1234cd /home/pi/Desktop/wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm.zipsudo unzip ngrok-stable-linux-arm.zipsudo ./ngrok http 80 #这里演示的是80端口，其他端口未测试。 然后在Forwarding后面跟着的ip:ports -&gt; localhost:80即为远程映射地址。在任意浏览器输入上面的ip:ports即可访问到本地服务。 【安装Mysql5.7】 因为Ubuntu14.04下没有Mysql5.7的源，需要连接外部资源库进行下载 12345wget http://dev.mysql.com/get/mysql-apt-config_0.6.0-1_all.debsudo dpkg -i mysql-apt-config_0.6.0-1_all.debsudo apt-get updatesudo apt-get install mysql-server# 在安装过程中要输入root的密码 安装完成后，执行mysql_secure_installation，根据提示完成安全设置 这一步骤中，在手机上用linux deploy部署linux执行有可能出现错误W: GPG error: http://rep.mysql.com/apt/debian jessie InRelease: The following signatures were invalid: KEYEXPIRED 1487236823 KEYEXPIRED 1487236823 KEYEXPIRED 1487236823w: The repository ‘http://repo.mysql.com/apt/debian jessie InRelease’ is not signed.按照https://askubuntu.com/questions/131601/gpg-error-release-the-following-signatures-were-invalid-badsig中的方法： 123456&gt; sudo apt-get clean&gt; sudo mv /var/lib/apt/lists /tmp&gt; sudo mkdir -p /var/lib/apt/lists/partial #这一句可以不执行，update的时候会自动执行&gt; sudo apt-get clean&gt; sudo apt-get update&gt; 依次执行上面的命令后即可重新安装其他版本的mysql。]]></content>
      <categories>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>KodExplorer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Raspbian 中国软件源]]></title>
    <url>%2F2019%2F01%2F10%2FRaspbian-%E4%B8%AD%E5%9B%BD%E8%BD%AF%E4%BB%B6%E6%BA%90%2F</url>
    <content type="text"><![CDATA[标签： 树莓派 本文来自：树莓派实验室链接地址：http://shumeipai.nxez.com/2013/08/31/raspbian-chinese-software-source.html 花了些时间整理了目前最新的树莓派中国大陆地区的软件源，记下来，希望对大家有帮助。 中国科学技术大学Raspbian http://mirrors.ustc.edu.cn/raspbian/raspbian/ 阿里云Raspbian http://mirrors.aliyun.com/raspbian/raspbian/ 清华大学Raspbian http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ 华中科技大学Raspbian http://mirrors.hustunique.com/raspbian/raspbian/Arch Linux ARM http://mirrors.hustunique.com/archlinuxarm/ 华南农业大学（华南用户）Raspbian http://mirrors.scau.edu.cn/raspbian/ 大连东软信息学院源（北方用户）Raspbian http://mirrors.neusoft.edu.cn/raspbian/raspbian/ 重庆大学源（中西部用户）Raspbian http://mirrors.cqu.edu.cn/Raspbian/raspbian/ 中山大学 已跳转至中国科学技术大学源Raspbian http://mirror.sysu.edu.cn/raspbian/raspbian/ 新加坡国立大学Raspbian http://mirror.nus.edu.sg/raspbian/raspbian 牛津大学Raspbian http://mirror.ox.ac.uk/sites/archive.raspbian.org/archive/raspbian/ 韩国KAIST大学Raspbian http://ftp.kaist.ac.kr/raspbian/raspbian/ 使用说明编辑/etc/apt/sources.list 文件，参考如下命令：sudo nano /etc/apt/sources.list删除原文件所有内容，jessie 用以下内容取代：12deb http://mirror.sysu.edu.cn/raspbian/raspbian/ jessie main contrib non-freedeb-src http://mirror.sysu.edu.cn/raspbian/raspbian/ jessie main contrib non-free wheezy 用以下内容取代：12deb http://mirror.sysu.edu.cn/raspbian/raspbian/ wheezy main contrib non-freedeb-src http://mirror.sysu.edu.cn/raspbian/raspbian/ wheezy main contrib non-free 注：网址末尾的raspbian重复两次是必须的。因为Raspbian的仓库中除了APT软件源还包含其他代码。APT软件源不在仓库的根目录，而在raspbian/子目录下。 编辑镜像站后，请使用sudo apt-get update命令，更新软件源列表，同时检查您的编辑是否正确。如果需要, 你可以执行以下命令将Raspbian public key加入你的 apt-get keyring :1wget http://archive.raspbian.org/raspbian.public.key -O - | sudo apt-key add - 2015.11.23 add a update from comments：现在版本升级了，版本号要更改，把 wheezy 改成 jessie &gt; 这样大部分源是在中国，不然像楼上那样升级，大部分源在国外]]></content>
      <categories>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>软件源</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【转载】Linux启动项管理：Update-rc.d 命令用法详解]]></title>
    <url>%2F2019%2F01%2F10%2F%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91Linux%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%AE%A1%E7%90%86%EF%BC%9AUpdate-rc-d-%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95%E8%AF%A6%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[标签： Linux Update-rc.d [原文链接：Update-rc.d 命令用法详解][原文作者：Shb_derek] Ubuntu或者Debian系统中update-rc.d命令，是用来更新系统启动项的脚本。这些脚本的链接位于/etc/rcN.d/目录，对应脚本位于/etc/init.d/目录。在了解update-rc.d命令之前，你需要知道的是有关Linux 系统主要启动步骤，以及Ubuntu中运行级别的知识。 一、Linux 系统主要启动步骤读取 MBR 的信息，启动 Boot Manager。加载系统内核，启动 init 进程， init 进程是 Linux 的根进程，所有的系统进程都是它的子进程。init 进程读取 /etc/inittab 文件中的信息，并进入预设的运行级别。通常情况下 /etc/rcS.d/ 目录下的启动脚本首先被执行，然后是/etc/rcN.d/ 目录。根据 /etc/rcS.d/ 文件夹中对应的脚本启动 Xwindow 服务器 xorg，Xwindow 为 Linux 下的图形用户界面系统。启动登录管理器，等待用户登录。 二、运行级别Ubuntu中的运行级别 0（关闭系统）1（单用户模式，只允许root用户对系统进行维护。）2 到 5（多用户模式，其中3为字符界面，5为图形界面。）6（重启系统） 切换运行级别12init [0123456Ss]例如：init 0 命令关机； init 6 命令重新启动 启动项管理工具12sudo install sysv-rc-conf //或者使用带gui的工具bumsudo sysv-rc-conf 三、update-rc.d命令详解 从所有的运行级别中删除指定启动项1update-rc.d -f ＜basename＞ remove 按指定顺序、在指定运行级别中启动或关闭1update-rc.d ＜basename＞ start|stop ＜order＞ ＜runlevels＞ 实例：update-rc.d apachectl start 20 2 3 4 5 . stop 20 0 1 6 . 解析：表示在2、3、4、5这五个运行级别中，由小到大，第20个开始运行apachectl；在 0 1 6这3个运行级别中，第20个关闭apachectl。这是合并起来的写法，注意它有2个点号，效果等于下面方法：1update-rc.d apachectl defaults A启动后B才能启动，B关闭后A才关闭12update-rc.d A defaults 80 20update-rc.d B defaults 90 10 启动和关闭顺序为90，级别默认1update-rc.d ＜basename＞ defaults 90]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Update-rc.d</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[树莓派：实现物联网第一步之控制LED]]></title>
    <url>%2F2019%2F01%2F10%2F%E6%A0%91%E8%8E%93%E6%B4%BE%EF%BC%9A%E5%AE%9E%E7%8E%B0%E7%89%A9%E8%81%94%E7%BD%91%E7%AC%AC%E4%B8%80%E6%AD%A5%E4%B9%8B%E6%8E%A7%E5%88%B6LED%2F</url>
    <content type="text"><![CDATA[硬件部分 准备材料： 树莓派 面包板（可选） 杜邦线（可选） LED 继电器 LED、继电器等连接到面包板上，继电器连接到树莓派的GPIO11和GPIO13，LED连接到继电器，具体链接方法不再详述； 安装FLask(Flask安装教程) 创建led.py，相同目录下创建templates文件夹，里面放一个led.html，代码分别如下：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667from flask import Flask, render_template , requestimport RPi.GPIO as GPIOimport timeGPIO.setmode(GPIO.BOARD)GPIO.setup(11, GPIO.OUT)GPIO.setup(13, GPIO.OUT)GPIO.setup(3, GPIO.OUT)GPIO.setup(5, GPIO.OUT)GPIO.output(11, GPIO.HIGH)GPIO.output(13, GPIO.HIGH)GPIO.output(3, GPIO.LOW)time.sleep(1)GPIO.output(3, GPIO.HIGH)GPIO.output(5, GPIO.LOW)time.sleep(1)GPIO.output(5, GPIO.HIGH)time.sleep(0.1)GPIO.output(5, GPIO.LOW)GPIO.output(3, GPIO.LOW)GPIO.output(13, GPIO.LOW)GPIO.output(11, GPIO.LOW)time.sleep(1)GPIO.output(5, GPIO.HIGH)GPIO.output(3, GPIO.HIGH)GPIO.output(13, GPIO.HIGH)GPIO.output(11, GPIO.HIGH)app = Flask(__name__)a = 'checked'@app.route('/',methods=['GET','POST'])def index(): if request.method =='POST': GPIO.output(5, GPIO.LOW) time.sleep(0.001) GPIO.output(5, GPIO.HIGH) a = request.form["on2"] b = request.form["radio"] if b == 'one': if a == 'on': GPIO.output(11, GPIO.LOW) return render_template('led.html',i = 'ON',a = 'checked') else: GPIO.output(11, GPIO.HIGH) return render_template('led.html',i = 'OFF',a = 'checked') if b == 'two': if a == 'on': GPIO.output(13, GPIO.LOW) return render_template('led.html',j = 'ON',b = 'checked') else: GPIO.output(13, GPIO.HIGH) return render_template('led.html',j = 'OFF',b = 'checked') else: return render_template('led.html',w = 'please choose the botton!') else: GPIO.output(3, GPIO.LOW) time.sleep(0.1) GPIO.output(3, GPIO.HIGH) return render_template('led.html')if __name__ == "__main__": app.run(host='0.0.0.0', port=8888, debug=True) 12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt; &lt;head&gt; &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt; &lt;title&gt;led开关&lt;/title&gt; &lt;link rel="shortcut icon" href="favicon.ico"&gt; &lt;/head&gt; &lt;style&gt; .aa&#123; fontcolor:FOO; &#125; &lt;/style&gt; &lt;body&gt; &lt;center&gt; &lt;h1&gt;led控制&lt;/h1&gt; &lt;h3&gt;&#123;&#123;w&#125;&#125;&lt;/h3&gt; &lt;form id="form1" name="form1" method="post" action=""&gt; &lt;p&gt; &lt;input name="radio" type="radio" id="radio" value="one" &#123;&#123;a&#125;&#125;="&#123;&#123;a&#125;&#125;" /&gt; &lt;label for="radio"&gt;&lt;/label&gt; 开关1 &lt;input type="radio" name="radio" id="radio" value="two" &#123;&#123;b&#125;&#125;="&#123;&#123;b&#125;&#125;" /&gt; &lt;label for="radio2"&gt;&lt;/label&gt; 开关2 &lt;/p&gt; &lt;p&gt;状态:&#123;&#123;i&#125;&#125; 状态:&#123;&#123;j&#125;&#125;&lt;/p&gt; &lt;p&gt; &lt;input style="width:300px; height:75px; background-color: #0F0; font-size:24px; font-family:Verdana, Geneva, sans-serif; font-weight:bold; color:#FFF" type="submit" name="on2" id="on2" value="on" /&gt; &lt;/p&gt; &lt;p&gt; &lt;/p&gt; &lt;p&gt; &lt;input style="width:300px; height:75px; background-color:#F00;font-size:24px; font-family:Verdana, Geneva, sans-serif; font-weight:bold; color:#FFF" type="submit" name="on2" id="on2" value="off" /&gt; &lt;/p&gt; &lt;p&gt; &lt;/p&gt; &lt;p&gt; &lt;/p&gt; &lt;p&gt; &lt;/p&gt; &lt;p&gt; &lt;/p&gt; &lt;p&gt; &lt;/p&gt; &lt;p&gt; &lt;/form&gt; &lt;/center&gt; &lt;/body&gt;&lt;/html&gt; 在同一局域网中的其他手机或电脑中输入树莓派的IP地址:8888，即可看到效果： 最后，选择开关1或者开关2，然后点击on或者off，即可看到LED灯会点亮或熄灭。]]></content>
      <categories>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>物联网</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git连接Coding.net远程仓库时无法push]]></title>
    <url>%2F2019%2F01%2F10%2FGit%E8%BF%9E%E6%8E%A5Coding-net%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E6%97%B6%E6%97%A0%E6%B3%95push%2F</url>
    <content type="text"><![CDATA[树莓派上安装了Git软件，在Coding.net上创建了版本库，然后clone下来：1pi@raspberrypi:~ $ git clone git@git.coding.net:username/projectname.git 成功clone下来，然后完成一次提交再push回去的时候却报错了，总结原因，写下我的折腾记录。。。 首先要生成ssh密钥，用命令$ ssh-keygen -t rsa -C &quot;username@host.com&quot;生成密钥，默认保存在/home/user/.ssh 目录下，包括id_rsa和id_rsa.pub两个文件，其中第一个是私钥，、第二个是公钥。打开公钥，将所有内容复制，然后去coding.net的我的账户-&gt;SSH公钥，将复制的公钥内容粘贴进去，名称和有效日期按照自己的需求定义，最后点击添加。 然后再次push，还是报错，内容大致为：12Permission denied (publickey).fatal: Could not read from remote repository. 于是继续百度……发现需要把专用密钥添加到ssh-agent的高速缓存中。该命令位置在/usr/bin/ssh-add。来自: http://man.linuxde.net/ssh-add于是，执行上述命令，发现又报错了：12$ ssh-add ~/.ssh/rsaCould not open a connection to your authentication agent. 继续搜索解决方案，最终按照以下方法解决了这个问题：先执行 eval `ssh-agent` （是～键上面的那个`） 再执行 $ ssh-add ~/.ssh/rsa成功，最后 $ ssh-add -l 就可以看到新加的rsa了。完成如上步骤，再次尝试$ git push，发现终于可以推送成功了~~~]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>Coding.net</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解决树莓派软件源更新时公钥问题]]></title>
    <url>%2F2019%2F01%2F10%2F%E8%A7%A3%E5%86%B3%E6%A0%91%E8%8E%93%E6%B4%BE%E8%BD%AF%E4%BB%B6%E6%BA%90%E6%9B%B4%E6%96%B0%E6%97%B6%E5%85%AC%E9%92%A5%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[标签： 树莓派 软件源 公钥 【参考链接】如何更新Debian源和导入公钥Ubuntu的软件源更新常见问题及解决 【问题说明】在另一篇文章（树莓派安装KodExplorer变身私人云桌面）中，为了安装PHP7.0(通过软件仓库安装而不是编译安装)，需要编辑文件sudo vim /etc/apt/sources.list，添加软件源：1deb http://mirrordirector.raspbian.org/raspbian/ stretch main contrib non-free rpi 结果添加了软件源之后进行sudo apt-get update的时候报错，错误信息大致如下： W: GPG error: http://mirrordirector.raspbian.org/raspbian stretch InRelease: The following signatures couldn’t be verified because the public key is not available: NO_PUBKEY 9165938D90FDDD2EW: The repository ‘http://mirrordirector.raspbian.org/raspbian stretch InRelease’ is not signed.N: Data from such a repository can’t be authenticated and is therefore potentially dangerous to use.N: See apt-secure(8) manpage for repository creation and user configuration details.W: There is no public key available for the following key IDs:9165938D90FDDD2EE: Failed to fetch http://mirrordirector.raspbian.org/raspbian/dists/stretch/main/binary-armhf/Packages.xz Hash Sum mismatchE: Some index files failed to download. They have been ignored, or old ones used instead. 错误信息大致意思为没有找到对应的公钥，所以软件源地址不被信任。 【解决方案】解决方案就是导入对应仓库的公钥，命令格式为:1gpg --keyserver &lt;KeyServer&gt; --recv &lt;公钥签名&gt; gpg --export --armor &lt;公钥签名&gt; | sudo apt-key add 也可以用如下格式：12apt-key adv --keyserver &lt;KeyServer&gt; --recv-keys &lt;公钥签名&gt;gpg --export --armor 40976EAF437D05B5 | sudo apt-key add - 其中：&lt;KeyServer&gt;，key服务器，可以填 keyserver.ubuntu.com ，当然也可以填其他的。在本例中，按照上面的格式，执行：12gpg --keyserver keyserver.ubuntu.com --recv-keys 9165938D90FDDD2Egpg --export --armor 9165938D90FDDD2E | sudo apt-key add - 然后再执行sudo apt-get update即可解决问题。]]></content>
      <categories>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>软件源</tag>
        <tag>公钥</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[A Quick Guide to Using the MySQL APT Repository]]></title>
    <url>%2F2019%2F01%2F10%2FA-Quick-Guide-to-Using-the-MySQL-APT-Repository%2F</url>
    <content type="text"><![CDATA[标签： MySQL APT Repository 【来自：https://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/】 Abstract This is a quick guide to using the MySQL APT repository, which provides deb packages for installing and managing the MySQL server, client, and other components on the following Linux platforms: Debian 7.x (“Wheezy”) Debian 8.x (“Jessie”) Debian 9.x (“Stretch”) Ubuntu 14.04 LTS (“Trusty Tahr”) Ubuntu 16.04 (“Xenial Xerus”) Ubuntu 17.04 (“Zesty Zapu”) Ubuntu 17.10 (“Artful Aardvark”) For legal information, see the Legal Notices. For help with using MySQL, please visit either the MySQL Forums or MySQL Mailing Lists, where you can discuss your issues with other MySQL users. For additional documentation on MySQL products, including translations of the documentation into other languages, and downloadable versions in variety of formats, including HTML and PDF formats, see the MySQL Documentation Library. Document generated on: 2018-01-06 (revision: 55374) Table of Contents Steps for a Fresh Installation of MySQL Selecting a Major Release Version Installing Additional MySQL Products and Components with APT Installing MySQL from Source with the MySQL APT Repository Upgrading MySQL with the MySQL APT Repository Replacing a Native Distribution of MySQL Using the MySQL APT Repository Replacing a MySQL Server Installed by a Direct deb Package Download Removing MySQL with APT Special Notes on Upgrading the Shared Client Libraries Installing MySQL NDB Cluster Using the APT Repository Installing Additional MySQL NDB Cluster Products and Components Available Packages from the MySQL APT Repository Appendix A: Adding and Configuring the MySQL APT Repository Manually Appendix B: Installing MySQL Non-interactively with MySQL APT Repository Appendix C: Errors with Missing Entries in the Repository Sources List Steps for a Fresh Installation of MySQL NoteThe following instructions assume that no versions of MySQL (whether distributed by Oracle or other parties) have already been installed on your system; if that is not the case, follow the instructions given in Replacing a Native Distribution of MySQL Using the MySQL APT Repository or Replacing a MySQL Server Installed by a Direct deb Package Download instead. 1.Adding the MySQL APT RepositoryFirst, add the MySQL APT repository to your system’s software repository list. Follow these steps: Go to the download page for the MySQL APT repository at http://dev.mysql.com/downloads/repo/apt/. Select and download the release package for your Linux distribution. Install the downloaded release package with the following command, replacing version-specific-package-name with the name of the downloaded package (preceded by its path, if you are not running the command inside the folder where the package is): 1shell&gt; sudo dpkg -i /PATH/version-specific-package-name.deb For example, for version w.x.y-z of the package, the command is:1shell&gt; sudo dpkg -i mysql-apt-config_w.x.y-z_all.deb Note that the same package works on all supported Debian and Ubuntu platforms. During the installation of the package, you will be asked to choose the versions of the MySQL server and other components (for example, the MySQL Workbench) that you want to install. If you are not sure which version to choose, do not change the default options selected for you. You can also choose none if you do not want a particular component to be installed. After making the choices for all components, choose Ok to finish the configuration and installation of the release package. You can always change your choices for the versions later; see Selecting a Major Release Version for instructions. Update package information from the MySQL APT repository with the following command (this step is mandatory):1shell&gt; sudo apt-get update Instead of using the release package, you can also add and configure the MySQL APT repository manually; see Appendix A: Adding and Configuring the MySQL APT Repository Manually for details. NoteOnce the MySQL APT repository is enabled on your system, you will no longer be able to install any MySQL packages from your platform’s native software repositories until the MySQL APT repository is disabled. #2.Installing MySQL with APTInstall MySQL by the following command:1shell&gt; sudo apt-get install mysql-server This installs the package for the MySQL server, as well as the packages for the client and for the database common files. During the installation, you are asked to supply a password for the root user for your MySQL installation. ImportantMake sure you remember the root password you set. Users who want to set a password later can leave the password field blank in the dialogue box and just press Ok; in that case, root access to the server will be authenticated by Socket Peer-Credential Pluggable Authentication for connections using a Unix socket file. You can set the root password later using the program mysql_secure_installation. #3.Starting and Stopping the MySQL ServerThe MySQL server is started automatically after installation. You can check the status of the MySQL server with the following command:1shell&gt; sudo service mysql status Stop the MySQL server with the following command:1shell&gt; sudo service mysql stop To restart the MySQL server, use the following command:1shell&gt; sudo service mysql start NoteA few third-party native repository packages that have dependencies on the native MySQL packages may not work with the MySQL APT repository packages and should not be used together with them; these include akonadi-backend-mysql, handlersocket-mysql-5.5, and zoneminder. Selecting a Major Release VersionBy default, all installations and upgrades for your MySQL server and the other required components come from the release series of the major version you have selected during the installation of the configuration package (see Adding the MySQL APT Repository). However, you can switch to another supported major release series at any time by reconfiguring the configuration package you have installed. Use the following command:1shell&gt; sudo dpkg-reconfigure mysql-apt-config A dialogue box then asks you to choose the major release version you want. Make your selection and choose Ok. After returning to the command prompt, update package information from the MySQL APT repository with this command:1shell&gt; sudo apt-get update The latest version in the selected series will then be installed when you use the apt-get install command next time. You can use the same method to change the version for any other MySQL component you want to install with the MySQL APT repository. Installing Additional MySQL Products and ComponentsYou can use APT to install individual components of MySQL from the MySQL APT repository. Assuming you already have the MySQL APT repository on your system’s repository list (see Adding the MySQL APT Repository for instructions), first, use the following command to get the latest package information from the MySQL APT repository:1shell&gt; sudo apt-get update Install any packages of your choice with the following command, replacing package-name with name of the package (here is a list of available packages):1shell&gt; sudo apt-get install package-name For example, to install the MySQL Workbench:1shell&gt; sudo apt-get install mysql-workbench-community To install the shared client libraries:1shell&gt; sudo apt-get install libmysqlclient18 Installing MySQL from Source with the MySQL APT Repository NoteThis feature is only supported on 64-bit systems. You can download the source code for MySQL and build it using the MySQL APT Repository: Add the MySQL APT repository to your system’s repository list and choose the major release series you want (see Adding the MySQL APT Repository for instructions). Update package information from the MySQL APT repository with the following command (this step is mandatory): 1shell&gt; sudo apt-get update Install packages that the build process depends on: 1shell&gt; sudo apt-get build-dep mysql-server Download the source code for the major components of MySQL and then build them (run this command in the folder in which you want the downloaded files and the builds to be located): 1shell&gt; apt-get source -b mysql-server deb packages for installing the various MySQL components are created. Pick the deb packages for the MySQL components you need and install them with the command:1shell&gt; sudo dpkg -i package-name.deb Notice that dependency relationships exist among the MySQL packages. For a basic installation of the MySQL server, install the database common files package, the client package, the client metapackage, the server package, and the server metapackage (in that order) with the following steps: Preconfigure the MySQL server package with the following command:1shell&gt; sudo dpkg-preconfigure mysql-community-server_version-and-platform-specific-part.deb You will be asked to provide a password for the root user for your MySQL installation; see important information on root password given in Installing MySQL with APT above. You might also be asked other questions regarding the installation. Install the required packages with a single command: 1shell&gt; sudo dpkg -i mysql-&#123;common,community-client,client,community-server,server&#125;_*.deb If you are being warned of unmet dependencies by dpkg, you can fix them using apt-get: 1sudo apt-get -f install Here are where the files are installed on the system: All configuration files (like my.cnf) are under /etc/mysql All binaries, libraries, headers, etc., are under /usr/bin and /usr/sbin The data directory is under /var/lib/mysql See also information given in Starting and Stopping the MySQL Server. Upgrading MySQL with the MySQL APT Repository Notes Before performing any upgrade to MySQL, follow carefully the instructions in Upgrading MySQL. Among other instructions discussed there, it is especially important to back up your database before the upgrade. The following instructions assume that MySQL has been installed on your system using the MySQL APT repository; if that is not the case, follow the instructions given in Replacing a Native Distribution of MySQL Using the MySQL APT Repository or Replacing a MySQL Server Installed by a Direct deb Package Download instead. Also notice that you cannot use the MySQL APT repository to upgrade a distribution of MySQL that you have installed from a nonnative software repository (for example, from MariaDB or Percona). Use the MySQL APT repository to perform an in-place upgrade for your MySQL installation (that is, replacing the old version and then running the new version off the old data files) by following these steps: Make sure you already have the MySQL APT repository on your system’s repository list (see Adding the MySQL APT Repository for instructions). Make sure you have the most up-to-date package information on the MySQL APT repository by running: 1shell&gt; sudo apt-get update Note that, by default, the MySQL APT repository will update MySQL to the release series you have selected when you were adding the MySQL APT repository to your system. If you want to upgrade to another release series, select it by following the steps given in Selecting a Major Release Version. As a general rule, to upgrade from one release series to another, go to the next series rather than skipping a series. For example, if you are currently running MySQL 5.5 and wish to upgrade to a newer series, upgrade to MySQL 5.6 first before upgrading to 5.7, and so on. Important For important information about upgrading from MySQL 5.5 to 5.6, see Upgrading from MySQL 5.5 to 5.6. For important information about upgrading from MySQL 5.6 to 5.7, see Upgrading from MySQL 5.6 to 5.7. For important information about upgrading from MySQL 5.7 to 8.0, see Upgrading from MySQL 5.7 to 8.0. In-place downgrading of MySQL is not supported by the MySQL APT repository. Follow the instructions in Downgrading MySQL. Upgrade MySQL by the following command:1shell&gt; sudo apt-get install mysql-server The MySQL server, client, and the database common files are upgraded if newer versions are available. To upgrade any other MySQL package, use the same apt-get install command and supply the name for the package you want to upgrade:1shell&gt; sudo apt-get install package-name To see the names of the packages you have installed from the MySQL APT repository, use the following command:1shell&gt; dpkg -l | grep mysql | grep ii NoteIf you perform a system-wide upgrade by the apt-get upgrade, only the library and development packages for MySQL will get upgraded with newer versions (if available). To upgrade other components including the server, client, test suite, etc., use the apt-get install command, as explained precedingly. The MySQL server always restarts after an update by APT. Once the server restarts, you should run mysql_upgrade to check and possibly resolve any incompatibilities between the old data and the upgraded software. mysql_upgrade also performs other functions; see mysql_upgrade — Check and Upgrade MySQL Tables for details. Replacing a Native Distribution of MySQL Using the MySQL APT RepositoryVariants and forks of MySQL are distributed by different parties through their own software repositories or download sites. You can replace a native distribution of MySQL installed from your Linux platform’s software repository with a distribution from the MySQL APT repository in a few steps. NoteThe MySQL APT repository can only replace distributions of MySQL maintained and distributed by Debian or Ubuntu. It cannot replace any MySQL forks found either inside or outside of the distributions’ native repositories. To replace such MySQL forks, you have to uninstall them first before you install MySQL using the MySQL APT repository. Follow the instructions for uninstallation from the forks’ distributors and, before you proceed, make sure you back up your data and you know how to restore them to a new server. WarningA few third-party native repository packages that have dependencies on the native MySQL packages may not work with the MySQL APT repository packages and should not be used together with them; these include akonadi-backend-mysql, handlersocket-mysql-5.5, and zoneminder. 1.Backing Up Your DatabaseTo avoid loss of data, always back up your database before trying to replace your MySQL installation using the MySQL APT repository. See Backup and Recovery for instructions. 2.Adding the MySQL APT Repository and Selecting a Release SeriesAdd the MySQL APT repository to your system’s repository list and select the release series you want by following the instructions given in Adding the MySQL APT Repository. 3.Replacing the Native Distribution by an APT UpdateBy design, the MySQL APT repository replaces your native distribution of MySQL when you perform upgrades on the MySQL packages. To perform the upgrades, follow the same instructions given in Step 4 in Upgrading MySQL with the MySQL APT Repository. WarningOnce the native distribution of MySQL has been replaced using the MySQL APT repository, purging the old MySQL packages from the native repository using the apt-get purge, apt-get remove –purge, or dpkg -P command might impact the newly installed MySQL server in various ways. Therefore, do not purge the old MySQL packages from the native repository packages. Replacing a MySQL Server Installed by a Direct deb Package Downloaddeb packages from MySQL for installing the MySQL server and its components can either be downloaded from the MySQL Developer Zone’s MySQL Download page or from the MySQL APT repository. The deb packages from the two sources are different, and they install and configure MySQL in different ways. If you have installed MySQL with the MySQL Developer Zone’s deb packages and now want to replace the installation using the ones from the MySQL APT repository, follow these steps: Back up your database. See Backup and Recovery for instructions. Follow the steps given previously for adding the MySQL APT repository. Remove the old installation of MySQL by running: shell&gt; sudo dpkg -P mysqlInstall MySQL from the MySQL APT repository: shell&gt; sudo apt-get install mysql-serverIf needed, restore the data on the new MySQL installation. See Backup and Recovery for instructions. Removing MySQL with APTTo uninstall the MySQL server and the related components that have been installed using the MySQL APT repository, first, remove the MySQL server using the following command: shell&gt; sudo apt-get remove mysql-serverThen, remove any other software that was installed automatically with the MySQL server: shell&gt; sudo apt-get autoremoveTo uninstall other components, use the following command, replacing package-name with the name of the package of the component you want to remove: shell&gt; sudo apt-get remove package-nameTo see a list of packages you have installed from the MySQL APT repository, use the following command: shell&gt; dpkg -l | grep mysql | grep iiSpecial Notes on Upgrading the Shared Client LibrariesYou can install the shared client libraries from MySQL APT repository by the following command (see Installing Additional MySQL Products and Components with APT for more details): shell&gt; sudo apt-get install libmysqlclient20If you already have the shared client libraries installed from you Linux platform’s software repository, it can be updated by the MySQL APT repository with its own package by using the same command (see Replacing the Native Distribution by an APT Update for more details). After updating MySQL using the APT repository, applications compiled with older versions of the shared client libraries should continue to work. If you recompile applications and dynamically link them with the updated libraries: as typical with new versions of shared libraries, any applications compiled using the updated, newer shared libraries might require those updated libraries on systems where the applications are deployed. If those libraries are not in place, the applications requiring the shared libraries might fail. Therefore, it is recommended that the packages for the shared libraries from MySQL be deployed on those systems. You can do this by adding the MySQL APT repository to the systems (see Adding the MySQL APT Repository) and installing the latest shared client libraries using the command given at the beginning of this section. Installing MySQL NDB Cluster Using the APT RepositoryNotesThe MySQL APT repository supports installation of MySQL NDB Cluster only for release 7.5.6 and later, and only for Debian 7.x and 8.x, and Ubuntu 14.04 and 16.04. For other methods of installing NDB Cluster, see Installation of NDB Cluster on Linux, or Installation of NDB Cluster on Linux, depending on the release series that you are using. If you already have the MySQL server or MySQL NDB Cluster installed on your system, make sure it is stopped and you have your data and configuration files backed up before proceeding. Known issues: The MySQL NDB Cluster packages have dependencies on the python-paramiko and libclass-methodmaker-perl packages, which are currently NOT installed automatically when you install the NDB Cluster packages; install those required packages yourself with this command before installing the NDB Cluster packages: shell&gt; sudo apt-get install python-paramiko libclass-methodmaker-perlAdding the MySQL APT Repository for MySQL NDB ClusterFollow the steps in Adding the MySQL APT Repository to add the MySQL APT repository to your system’s repository list. During the installation process of the configuration package, when you are asked which MySQL product you want to configure, choose “MySQL Server &amp; Cluster”; when asked which version you wish to receive, choose “mysql-cluster-x.y.” After returning to the command prompt, go to Step 2 below. If you already have the configuration package installed on your system, make sure it is up-to-date by running the following command: shell&gt; sudo apt-get install mysql-apt-configThen, use the same method described in Selecting a Major Release Version to select MySQL NDB Cluster for installation. When you are asked which MySQL product you want to configure, choose “MySQL Server &amp; Cluster”; when asked which version you wish to receive, choose “mysql-cluster-x.y.” After returning to the command prompt, update package information from the MySQL APT repository with this command: shell&gt; sudo apt-get updateInstalling MySQL NDB ClusterFor a minimal installation of MySQL NDB Cluster, follow these steps: Install the components for SQL nodes: shell&gt; sudo apt-get install mysql-cluster-community-serverYou will be asked to provide a password for the root user for your SQL node; see important information on the root password given in Installing MySQL with APT above. You might also be asked other questions regarding the installation. Install the executables for management nodes: shell&gt; sudo apt-get install mysql-cluster-community-management-serverInstall the executables for data nodes: shell&gt; sudo apt-get install mysql-cluster-community-data-nodeConfiguring and Starting MySQL NDB ClusterSee Initial Configuration of NDB Cluster on how to configure MySQL NDB Cluster and Initial Startup of NDB Cluster on how to start it for the first time. When following those instructions, adjust them according to the following details regarding the SQL nodes of your NDB Cluster installation: All configuration files (like my.cnf) are under /etc/mysql All binaries, libraries, headers, etc., are under /usr/bin and /usr/sbin The data directory is /var/lib/mysql Installing Additional MySQL NDB Cluster Products and ComponentsYou can use APT to install individual components and additional products of MySQL NDB Cluster from the MySQL APT repository (see Available Packages from the MySQL APT Repository for a list). To do that, assuming you already have the MySQL APT repository on your system’s repository list (see Adding the MySQL Yum Repository for MySQL NDB Cluster), follow the same steps given in Installing Additional MySQL Products and Components with APT. NoteKnown issue: Currently, not all components required for running the MySQL NDB Cluster test suite are installed automatically when you install the test suite package (mysql-cluster-community-test). Install the following packages with apt-get install before you run the test suite: mysql-cluster-community-auto-installer mysql-cluster-community-management-server mysql-cluster-community-data-node mysql-cluster-community-memcached mysql-cluster-community-java ndbclient-dev Available Packages from the MySQL APT RepositoryTable 1 Available Packages from the MySQL APT Repository Package Name Descriptionmysql-server Metapackage for installing the MySQL server mysql-community-server MySQL server mysql-client Metapackage for installing the MySQL client mysql-cluster-community-auto-installer Auto installer for NDB Cluster mysql-cluster-community-client MySQL client for NDB Cluster mysql-cluster-community-data-node NDB Cluster data node mysql-cluster-community-java NDB Cluster Java drivers mysql-cluster-community-management-server NDB Cluster management node mysql-cluster-community-memcached NDB Cluster memcached server mysql-cluster-community-server MySQL server for NDB Cluster mysql-cluster-community-source Source package for NDB Cluster mysql-cluster-community-test NDB Cluster testsuite mysql-community-client MySQL client mysql-common MySQL database common files libmysqlclient20 MySQL database client library libmysqlclient-dev MySQL database development files libmysqld-dev MySQL embedded database development files mysql-testsuite Metapackage for installing the MySQL test suite mysql-community-test MySQL test suite mysql-community-bench MySQL benchmark suite mysql-community-source MySQL source code mysql-workbench-communityMySQL Workbench (not available for Debian platforms) mysql-connector-python-py3MySQL Connector/Python for Ubuntu 14.04, 14.10, and 15.04 with Python 3.2 or later mysql-connector-pythonMySQL Connector/Python for Debian 7.x or Debian 8.x with Python 2.6.3 or later, and for Ubuntu 14.04, 14.10, or 15.04 with Python 2.6.3 to 3.1 mysql-utilities MySQL Utilities (currently not available for Debian 8.x)mysql-router MySQL Routerndbclient NDB Cluster clientndbclient-dev NDB Cluster client development library Appendix A: Adding and Configuring the MySQL APT Repository ManuallyHere are the steps for adding manually the MySQL APT repository to your system’s software repository list and configuring it, without using the release packages provided by MySQL: Download the MySQL GPG Public key (see Signature Checking Using GnuPG on how to do that) and save it to a file, without adding any spaces or special characters. Then, add the key to your system’s GPG keyring with the following command: shell&gt; sudo apt-key add path/to/signature-fileAlternatively, you can download the GPG key to your APT keyring directly using the apt-key utility: shell&gt; sudo apt-key adv –keyserver pgp.mit.edu –recv-keys 5072E1F5Create a file named /etc/apt/sources.list.d/mysql.list, and put into it repository entries in the following format: deb http://repo.mysql.com/apt/{debian|ubuntu}/ {jessie|wheezy|trusty|utopic|vivid} {mysql-5.6|mysql-5.7|workbench-6.2|utilities-1.4|connector-python-2.0}Pick the relevant options for your repository set up: Choose “debian” or “ubuntu” according to whether you are on a Debian or Ubuntu platform. Choose “jessie,” “ wheezy,” “trusty,” “utopic,” or “vivid,” according to the version of your operating system. For installing MySQL server, client, and database common files, choose “mysql-5.6” or “mysql-5.7” according to the MySQL version you want. To switch to another release series later, come back and adjust the entry with your new choice. NoteIf you already have a version of MySQL installed on your system, do not choose a lower version at this step, or it might result in an unsupported downgrade operation. For installing components like MySQL Workbench, MySQL Utilities, or MySQL Connector Python, create a single entry for each of them, specifying respectively “workbench-6.2,” “utilities-1.4,” or “connector-python-2.0” at the end of each entry. As an example, for a Ubuntu 14.04 platform, here are the lines in your mysql.list files for installing MySQL 5.6 and MySQL Connector/Python from the MySQL APT repository: deb http://repo.mysql.com/apt/ubuntu/ trusty mysql-5.6deb http://repo.mysql.com/apt/ubuntu/ trusty connector-python-2.0Use the following command to get the most up-to-date package information from the MySQL APT repository: shell&gt; sudo apt-get updateYou have configured your system to use the MySQL APT repository and are now ready to continue with Installing MySQL with APT or Installing Additional MySQL Products and Components with APT. Appendix B: Installing MySQL Non-interactively with MySQL APT RepositoryFor non-interactive installations of MySQL with the MySQL APT repository, answer the interactive questions asked by the server package by setting the relevant debconf variables in, for example, your installation script. These are the variables to set: root_password: This is the root password for the server installation. root_password_again: This is the root password, entered a second time for confirmation. The following are steps from a sample script that set the debconf variables and then install MySQL non-interactively by setting the environment variable DEBIAN_FRONTEND to noninteractive: sudo debconf-set-selections &lt;&lt;&lt; “mysql-community-server mysql-community-server/root-pass password mypassword”sudo debconf-set-selections &lt;&lt;&lt; “mysql-community-server mysql-community-server/re-root-pass password mypassword”sudo DEBIAN_FRONTEND=noninteractive apt-get -y install mysql-serverThe password variables are erased automatically after MySQL has been installed, so they need to be set again if the installation is to be repeated. Appendix C: Errors with Missing Entries in the Repository Sources ListUsers who configured their systems some time ago with an early and now outdated version of the release package for the MySQL APT repository might see a warning similar to the one below when running the apt-get update command: shell&gt; sudo apt-get updateW: Failed to fetch http://repo.mysql.com/apt/ubuntu/dists/trusty/InReleaseUnable to find expected entry ‘utilities-1.4/binary-amd64/Packages’ inRelease file (Wrong sources.list entry or malformed file)The apt-get update command fails with this, and it is no longer possible to update package information for the MySQL APT repository. This is due to outdated entries in the sources list, and you can resolve the problem by the following steps: Delete the file /etc/apt/sources.list.d/mysql.list from your system. That removes all sources list entries for the MySQL APT repository. Download and install the latest version of the release package for the MySQL repository by following the steps given in Adding the MySQL APT Repository, including the sudo apt-get update step. It reconfigures your system properly for using the MySQL APT repository. Legal NoticesCopyright © 1997, 2018, Oracle and/or its affiliates. All rights reserved. This software and related documentation are provided under a license agreement containing restrictions on use and disclosure and are protected by intellectual property laws. Except as expressly permitted in your license agreement or allowed by law, you may not use, copy, reproduce, translate, broadcast, modify, license, transmit, distribute, exhibit, perform, publish, or display any part, in any form, or by any means. Reverse engineering, disassembly, or decompilation of this software, unless required by law for interoperability, is prohibited. The information contained herein is subject to change without notice and is not warranted to be error-free. If you find any errors, please report them to us in writing. If this is software or related documentation that is delivered to the U.S. Government or anyone licensing it on behalf of the U.S. Government, then the following notice is applicable: U.S. GOVERNMENT END USERS: Oracle programs, including any operating system, integrated software, any programs installed on the hardware, and/or documentation, delivered to U.S. Government end users are “commercial computer software” pursuant to the applicable Federal Acquisition Regulation and agency-specific supplemental regulations. As such, use, duplication, disclosure, modification, and adaptation of the programs, including any operating system, integrated software, any programs installed on the hardware, and/or documentation, shall be subject to license terms and license restrictions applicable to the programs. No other rights are granted to the U.S. Government. This software or hardware is developed for general use in a variety of information management applications. It is not developed or intended for use in any inherently dangerous applications, including applications that may create a risk of personal injury. If you use this software or hardware in dangerous applications, then you shall be responsible to take all appropriate fail-safe, backup, redundancy, and other measures to ensure its safe use. Oracle Corporation and its affiliates disclaim any liability for any damages caused by use of this software or hardware in dangerous applications. Oracle and Java are registered trademarks of Oracle and/or its affiliates. Other names may be trademarks of their respective owners. Intel and Intel Xeon are trademarks or registered trademarks of Intel Corporation. All SPARC trademarks are used under license and are trademarks or registered trademarks of SPARC International, Inc. AMD, Opteron, the AMD logo, and the AMD Opteron logo are trademarks or registered trademarks of Advanced Micro Devices. UNIX is a registered trademark of The Open Group. This software or hardware and documentation may provide access to or information about content, products, and services from third parties. Oracle Corporation and its affiliates are not responsible for and expressly disclaim all warranties of any kind with respect to third-party content, products, and services unless otherwise set forth in an applicable agreement between you and Oracle. Oracle Corporation and its affiliates will not be responsible for any loss, costs, or damages incurred due to your access to or use of third-party content, products, or services, except as set forth in an applicable agreement between you and Oracle. This documentation is NOT distributed under a GPL license. Use of this documentation is subject to the following terms: You may create a printed copy of this documentation solely for your own personal use. Conversion to other formats is allowed as long as the actual content is not altered or edited in any way. You shall not publish or distribute this documentation in any form or on any media, except if you distribute the documentation in a manner similar to how Oracle disseminates it (that is, electronically for download on a Web site with the software) or on a CD-ROM or similar medium, provided however that the documentation is disseminated together with the software on the same medium. Any other use, such as any dissemination of printed copies or use of this documentation, in whole or in part, in another publication, requires the prior written consent from an authorized representative of Oracle. Oracle and/or its affiliates reserve any and all rights to this documentation not expressly granted above. Documentation AccessibilityFor information about Oracle’s commitment to accessibility, visit the Oracle Accessibility Program website at http://www.oracle.com/pls/topic/lookup?ctx=acc&amp;id=docacc. Access to Oracle SupportOracle customers that have purchased support have access to electronic support through My Oracle Support. For information, visit http://www.oracle.com/pls/topic/lookup?ctx=acc&amp;id=info or visit http://www.oracle.com/pls/topic/lookup?ctx=acc&amp;id=trs if you are hearing impaired. [37ml#repo-qg-apt-replace-direct]]></content>
      <categories>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[树莓派 RASPBERRY PI SD卡系统备份与还原]]></title>
    <url>%2F2019%2F01%2F10%2F%E6%A0%91%E8%8E%93%E6%B4%BE-RASPBERRY-PI-SD%E5%8D%A1%E7%B3%BB%E7%BB%9F%E5%A4%87%E4%BB%BD%E4%B8%8E%E8%BF%98%E5%8E%9F%2F</url>
    <content type="text"><![CDATA[标签： 树莓派 Linux 系统备份 【原文链接：http://www.fendou.info/raspberry-pi-sd-card-backup-and-recovery/comment-page-1/】【没看到作者的声明，转侵删】 近半年时间用来监控陆龟的树莓派 Raspberry Pi 还算稳定，可到了冬天龟箱里的加热灯长时间加热导致树莓派温度很高，时不时的自动重启。如果每次都能正常起来也就罢了，可偶尔会挂不上SD卡的文件系统直接宕了，还得用备份还原SD卡(如果没备份那就悲催了)。 买树莓派的时候只想到存储空间大能多存的东西于是买了个16GB的SD卡，可实际用了2G空间不到。最开始备份树莓派SD卡是用windwos下的Win32DiskImager，这种备份恢复树莓派的方式最简单，Windows+读卡器+Win32DiskImager 就可以对树莓派的SD做完整的镜像备份，可我的树莓派用的16GB的SD卡，备份还原既浪费空间又浪费时间。 后来发现一种直接用dd备份树莓派的方法，就是先在树莓派上mount一个共享目录(空间大于SD卡的即可)，然后用1dd if=/dev/mmcblk0 of=raspberrypi.img bs=1M 备份成raspberrypi.img镜像文件，恢复的方式有两种：一是用Win32DiskImager在windows系统上直接写到SD卡中；二是在Linux系统中用(先fdisk -l查看设备) dd if=/path/to/image/raspberrypi.img of=/dev/sdx这种方式要考虑网络环境，如果你的树莓派接的无线网卡，最好放弃这种方式，太慢！ 最后介绍最终极的备份还原树莓派的方式，利用dump 和 restore。先说明一下这种备份方式的好处：一是可以像Windows的Ghost只dump有效数据，也就是说可以最有效的节省备份空间，树莓派有多少数据就生成多大的镜像文件；二是可以恢复到比原来SD卡空间的小的SD卡上，我原来用的树莓派是16GB，现在可以把镜像恢复到8GB或者4GB的SD中。下面看详细步骤(不想看可以直接跳到最后的脚本) 一、安装需要的软件 dosfstools：fat32分区格式化工具dump：dump &amp; restore 备份工具parted &amp; kpartx：虚拟磁盘工具 执行安装脚本1234sudo apt-get install dosfstoolssudo apt-get install dumpsudo apt-get install partedsudo apt-get install kpartx 二、生成新的img文件先df -h查看下树莓派实际使用空间然后在决定生成文件大小，下面命令生成块大小为1MB总大小为2500MB的镜像文件1sudo dd if=/dev/zero of=raspberrypi.img bs=1MB count=2500 三、分割虚拟磁盘 利用parted将刚才生成的虚拟盘分割成两个分区 第一个分割区采用FAT32格式，由sector 8192开始到sector 12879，约62.9MB第二个分割区采用EXT4，由sector 122880开始到结束。123sudo parted raspberrypi.img --script -- mklabel msdossudo parted raspberrypi.img --script -- mkpart primary fat32 8192s 122879ssudo parted raspberrypi.img --script -- mkpart primary ext4 122880s -1 四、挂载虚拟磁盘并格式化 loopdevice：执行 losetup 连接 img 文件的 loop devicedevice：执行完 kpartx 后，虚拟磁盘代号。partBoot：由 device 加上 p1 组合而成的 FAT32 虚拟磁盘分区。partRoot：由 device 加上 p2 组合而成的 EXT4 虚拟磁盘分区。首先建立虚拟磁盘并分区12345loopdevice=`sudo losetup -f --show raspberrypi.img`device=`sudo kpartx -va $loopdevice | sed -E &apos;s/.*(loop[0-9])p.*/\1/g&apos; | head -1`device=&quot;/dev/mapper/$&#123;device&#125;&quot;partBoot=&quot;$&#123;device&#125;p1&quot;partRoot=&quot;$&#123;device&#125;p2&quot; 格式化虚拟磁盘分区12sudo mkfs.vfat $partBootsudo mkfs.ext4 $partRoot 五、开始备份fat32虚拟磁盘分区建立好后直接用cp命令备份文件123sudo mount -t vfat $partBoot /mediasudo cp -rfp /boot/* /media/sudo umount /media ext4 linux虚拟磁盘分区用dump &amp; restore 备份12345sudo mount -t ext4 $partRoot /media/cd /mediasudo dump -0uaf - / | sudo restore -rf -cdsudo umount /media 六、卸载虚拟磁盘12sudo kpartx -d $loopdevicesudo losetup -d $loopdevice 经过以上六步树莓派中的数据文件就全部备份到raspberrypi.img中了，你既可以在Windows中用Win32DiskImager将镜像恢复到SD卡，也可以在Linux用dd还原到SD卡，而且不要求恢复SD卡的大小跟原来的一样(不同品牌相同大小的SD卡实际可用空间不一样的，坑！)，这样就可以很方便的更换SD卡。当用此SD卡启动树莓派的时候执行raspi-config -&gt;Expand Filesystem 即可扩展未使用的空间。 这里就是最后的脚本，包含了以上六步，只需要编辑sudo vi backup.sh复制以下内容，sudo chmod 777 backup.sh，然后sudo ./backup.sh就可以在当前脚本目录中生成树莓派的SD卡镜像了。1234567891011121314151617181920212223#!/bin/shsudo dd if=/dev/zero of=raspberrypi.img bs=1MB count=2500sudo parted raspberrypi.img --script -- mklabel msdossudo parted raspberrypi.img --script -- mkpart primary fat32 8192s 122879ssudo parted raspberrypi.img --script -- mkpart primary ext4 122880s -1loopdevice=`sudo losetup -f --show raspberrypi.img`device=`sudo kpartx -va $loopdevice | sed -E &apos;s/.*(loop[0-9])p.*/\1/g&apos; | head -1`device=&quot;/dev/mapper/$&#123;device&#125;&quot;partBoot=&quot;$&#123;device&#125;p1&quot;partRoot=&quot;$&#123;device&#125;p2&quot;sudo mkfs.vfat $partBootsudo mkfs.ext4 $partRootsudo mount -t vfat $partBoot /mediasudo cp -rfp /boot/* /media/sudo umount /mediasudo mount -t ext4 $partRoot /media/cd /mediasudo dump -0uaf - / | sudo restore -rf -cdsudo umount /mediasudo kpartx -d $loopdevicesudo losetup -d $loopdevice]]></content>
      <categories>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Nextcloud个人云存储绝佳选择：一键自动安装方法和云盘使用体验]]></title>
    <url>%2F2019%2F01%2F10%2FNextcloud%E4%B8%AA%E4%BA%BA%E4%BA%91%E5%AD%98%E5%82%A8%E7%BB%9D%E4%BD%B3%E9%80%89%E6%8B%A9%EF%BC%9A%E4%B8%80%E9%94%AE%E8%87%AA%E5%8A%A8%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%E5%92%8C%E4%BA%91%E7%9B%98%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C%2F</url>
    <content type="text"><![CDATA[【原文链接：https://wzfou.com/nextcloud/】 搭建个人云存储一般会想到ownCloud，堪称是自建云存储服务的经典。而Nextcloud是ownCloud原开发团队打造的号称是“下一代”存储。初一看觉得“口气”不小，刚推出来就重新“定义”了Cloud，真正试用过后就由衷地赞同这个Nextcloud：它是个人云存储服务的绝佳选择。 与ownCloud相比，Nextcloud的功能丝毫没有减弱，甚至由于可以安装云存储服务应用，自制性更强，也更符合用户的需求。Nextcloud官网的帮助文档写得相当地详细，几乎任何关于Nextcloud的问题都可以找到答案，这说明Nextcloud开发团队确实比ownCloud更加优秀。 一开始以为Nextcloud只是一个网盘云存储，后来看到Nextcloud内置了Office文档、图片相册、日历联系人、两步验证、文件管理、RSS阅读等丰富的应用，我发现Nextcloud已经仅仅可以用作个人或者团队存储与共享，还可以打造成为一个个人办公平台，几乎相当于一个个人的Dropbox了。 Nextcloud运行环境与平常我们常用的程序差不多，LAMP是官方首选，不过LNMP也照样可以运行，只不过需要自己写URL重写规则。当然，官方还提供了SNAP一键安装包，一分钟内就可以在VPS上部署好Nextcloud，非常地方便。本篇文章就来分享SNAP安装Nextcloud的方法。 更多的关于邮件分发、CDN加速和VPS同步等工具，你还可以看看： 利用MailChimp建立RSS邮件订阅平台-每月免费12000封邮件可加2000用户 用Fikker自建CDN-支持Https,页面缓存,实时监控,流量统计,防CC攻击 Lsyncd搭建同步镜像-用Lsyncd实现本地和远程服务器之间实时同步 PS：2017年9月27日更新，想要利用Nextcloud实现离线下载可以看这里：Nextcloud离线下载搭建方法-整合Aria2和AriaNg、Aria2 WebUI实现离线下载。 一、Nextcloud一键安装Nextcloud官网： https://nextcloud.com/ nextcloud snap：https://github.com/nextcloud/nextcloud-snap nextcloud snap目前包含以下组件（会自动更新升级，请及时关注）： Nextcloud 11.0.3Apache 2.4PHP 7MySQL 5.7Redis 3.2mDNS for network discovery 安装前修改好hostname。在终端窗口中输入命令：hostname或uname –n，均可以查看到当前主机的主机名，修改参考如下（Ubuntu修改可参考我之前的一篇文章：ISPConfig 3.1 安装方法）： 1234567vim /etc/hosts150.95.150.57 pan.wzfou.net pan vim /etc/hostnamepan.wzfou.nethostname -F /etc/hostname #重启hostname #再次查看 一键安装方法： 1234sudo apt-get updatesudo apt-get install snapsudo apt-get install snapdsudo snap install nextcloud 如下图表示安装成功了。 接着，打开你的域名或者IP地址，然后会让你设置好管理员账号与密码，确定，完成安装。 可能有的人不想使用Snap安装方法，可以看看手动在VPS上部署LNMP/LAMP安装Nextcloud方法：手动安装NextCloud教程。 选择Snap还是VPS手动？不用纠结，以下官方的回答： snap优点：The snap is nice for getting up and running quickly with minimal space, and will work great if you’re happy not messing with it. Since it’s a snap you also get the benefit of automatic updates and the ability to rollback without worrying about needing to take a snapshot, etc. #翻译：snap安装快捷，傻瓜式一键安装，几分钟内搞定。同时，snap支持自动升级、回滚等，你无需使用复杂的命令工具。 snap缺点：However, the snap is very opinionated. Don’t want to use Apache? Sorry, the snap uses it. Don’t want to use MySQL? Sorry, MariaDB does not run on ARM. Something other than PHP 7.0.15? We picked the version we feel gives the best results. In other words, it’s not very tinker-friendly. We don’t do this to be mean, we do this so that we can reliably update it without your needing to worry about it. #翻译：snap不能自定义，只能使用snap既定的MysqL、apache、PHP等。不过，这样的好处就是经过官方测试过的运行稳定且有利于后期自动升级。 VPS手动安装优缺点：The VM is much more flexible. It’s a full version of Ubuntu server edition, allowing you to tweak whatever you need and it comes with many apps which are not that easy to configure for inexperienced administrators. This of course makes it larger. You’ll also need to make sure you maintain it and keep the OS up-to-date. Since it’s virtualized you can assign disk, CPU, memory, and network quotas to it (you’d need to install the snap in an lxc container or a VM to get the same abilities). #翻译：VPS手动则比较灵活，你可以自已配置磁盘、CPU、内存和网络，但是同时你需要懂得如何维护好VPS操作系统。 二、Nextcloud管理使用以下就是Nextcloud的管理中心面板，是不是与我们用过的Dropbox有点类似-简洁。左边就是分享的链接、收藏、WebDav地址，中间就是我们上传的图片、文档、程序等了，点击可以查看详情。右边有管理、个人、用户等。（点击放大） Nextcloud上传的视频支持在线播放。 Nextcloud上传的图片可以像幻灯片一样浏览。 Nextcloud支持给分享的文档、图片等设置有效期、密码保护等，有点类似于百度网盘了。 别人打开你的共享链接后就可以预览到图片或者视频了，也可以直接点击下载了。 在Nextcloud的个人中心页面，可以修改个人信息、应用密码、同步客户端等。 Nextcloud在服务器管理页面，则可以查看CPU、内存等使用情况、切换Nextcloud主题、是否对存储在Nextcloud的文件进行加密、激活插件等。 三、Nextcloud同步客户端Nextcloud提供了免费的同步客户端供大家下载使用，支持PC和手机。下载地址：https://nextcloud.com/install/#install-clients 在电脑上运行Nextcloud同步客户端，先填入你的Nextcloud地址。 然后就是输入Nextcloud的用户名以及客户端专用密码，这个专用密码需要到Nextcloud的个人中心页面生成。 Nextcloud允许你选择同步某一个文件夹，还是同步整个Nextcloud账户。 连接好了后，你就可以在本地看到Nextcloud同步过来的文件了，你在本地的操作都会影响到Nextcloud云端的文件存储，自动实现同步。 以下是Nextcloud的手机同步客户端，功能差不多。 Nextcloud手机客户端支持自动上传文件，还有设置下载路径等等。 四、Nextcloud添加应用Nextcloud官方提供了非常多的应用：https://apps.nextcloud.com/，Office文档、图片相册、日历联系人、两步验证、文件管理、RSS阅读等丰富的应用。这些应用你可以手动下载安装，也可以直接在Nextcloud后台一键激活。 Office文档插件：Documents。有Collabora Online、Markdown Editor、Calendar、Onlyoffice、Documents等，其中Documents安装比较简单，直接启用即可。 如果不支持打开Doc（X），你需要在你的Ubuntu安装以下包： 123apt-get install libreoffice-writerapt-get install libreoffice-commonapt-get install unoconv Documents插件安装好了后就可以在线查看和编辑Office文档了。 安全类插件：Two Factor TOTP Provider。这个插件可以让你的Nextcloud账号支持开启登录两步验证。 RSS阅读器插件：News。这个插件真的让我感觉眼前一亮，有了它我们可以将Nextcloud变身为一个RSS在线阅读器了。这个比之前我们利用Huginn抓取任意网站RSS的方法可以简单了。（点击放大） 五、Nextcloud高级设置Nextcloud支持使用PHP发送邮件，但是自带的邮局发出去的邮件基本上是被各大邮箱判定为垃圾邮件，所以我们需要利用好Nextcloud提供的SMTP发信功能。 4.1 Nextcloud用SMTP发信在Nextcloud的管理页面，找到“其他设置”，然后选择发信方式为SMTP，填写你的SMTP信息，这里我用的是腾讯企业邮箱的，你也可以使用Gmail、163等免费SMTP发信功能。 填写完成后，点击测试看看是不是可以成功发出邮件。 4.2 Nextcloud安装SSL证书如果你使用Snap安装的Nextcloud，那么添加SSL加密访问将是一件非常简单的事情。先确保你的域名已经成功解析到你的VPS主机上，然后执行命令： 123sudo nextcloud.enable-https lets-encrypt #安装Let&apos;s Encrypt SSL#如果你想使用自己的证书，请执行：sudo nextcloud.enable-https self-signed 如果你是使用自已的证书，请在执行命令后找到SSL证书的路径，将自己的证书上传替换生成的自签名证书文件即可。 4.3 Nextcloud备份与恢复备份MysqL数据库。使用Snap安装的Nextcloud，数据库文件在以下路径中，你直接将Nextcloud这个数据库全部备份即可。 [图片上传失败…(image-1fd742-1525492497608)] 备份文件。Nextcloud上传的文件存储在以下路径中，将里面的Data文件全部备份即可。 Nextcloud恢复。重装安装了Nextcloud后，将上面的数据库文件与文件数据全部导入到新的服务器，保持原来的路径即可。对于大量的文件迁移，推荐使用远程搬家方法：三个命令工具Rsync,SCP,Tar-快速解决Linux VPS远程网站搬家数据同步烦恼。 六、总结Nextcloud采用Snap的安装方法简单方便，适合不想折腾的朋友，并且官方打包的Nextcloud Snap自动部署好了LAMP，如果你想迁移服务器，只需要将新的服务器按照同样的方法安装Nextcloud，然后导入之前的数据库与存储文件即可。 Nextcloud如果用来存储一些私人的照片或者文件的话，最让人担心的恐怕是安全问题了。目前来看，Nextcloud本身的安全措施已经做得非常到位，例如账号两步验证、程序与存储文件分开、数据加密等。可能唯一需要我们自己做的就是保证服务器不要出现漏洞。 文章出自：挖站否 https://wzfou.com/nextcloud/，版权所有。本站文章除注明出处外，皆为作者原创文章，可自由引用，但请注明来源。]]></content>
      <categories>
        <category>树莓派</category>
        <category>NextCloud</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>NextCloud</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[手动安装NextCloud教程-免费开源的私有云存储网盘可播放图片音乐]]></title>
    <url>%2F2019%2F01%2F10%2F%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85NextCloud%E6%95%99%E7%A8%8B-%E5%85%8D%E8%B4%B9%E5%BC%80%E6%BA%90%E7%9A%84%E7%A7%81%E6%9C%89%E4%BA%91%E5%AD%98%E5%82%A8%E7%BD%91%E7%9B%98%E5%8F%AF%E6%92%AD%E6%94%BE%E5%9B%BE%E7%89%87%E9%9F%B3%E4%B9%90%2F</url>
    <content type="text"><![CDATA[【原文链接：https://wzfou.com/nextcloud-install/】 NextCloud由原ownCloud联合创始人Frank Karlitschek创建的，继承原ownCloud的核心技术又有不少的创新。在功能上NextCloud和ownCloud差不多，甚至还要丰富一些，在用户使用体验方面，NextCloud安装与使用都非常地顺手，最重要的是NextCloud完全开源免费。 NextCloud不仅是一个私人云网盘平台，也支持多用户同步协作使用。NextCloud支持账号注册，可以为账号开启两步验证，以确保账号安全。同时，NextCloud对于公开分享的文件可以设置有效期，对于上传的视频、音乐、Office文档等直接支持在线预览和播放。 NextCloud还提供了上百种的免费应用和插件，这些NextCloud应用与插件可以将NextCloud打造成为一个在线文档共享与编辑平台、音乐与视频娱乐平台以及文件存储下载平台。当然，如果是自己手动安装的NextCloud的话，那么这些插件也得自己配置好环境才行。 本篇文章就来分享一下手动安装NextCloud教程，更多的站长自建服务与平台，你还可以试试： Lsyncd搭建同步镜像-用Lsyncd实现本地和远程服务器之间实时同步 VestaCP与WHMCS整合教程-实现自助开通虚拟主机销售主机空间产品 ISPConfig与WHMCS整合方法-自动激活开通虚拟主机和管理空间用户 PS：2017年9月20日更新，觉得手动安装麻烦的朋友，可以使用一键安装的方法，参考：Nextcloud个人云存储绝佳选择：一键自动安装方法和云盘使用体验。 一、LAMP安装NextCloudNextCloud官网： https://nextcloud.com/ 准备好LAMP环境。LAMP即Apache、MysqL或Mariadb、PHP环境，NextCloud官方推荐使用Apache运行NextCloud，自带了.htaccess规则。而Nginx的话还需要自己手动编写NextCloud的URL重写规则。推荐以下方法一键安装LAMP： Linux VPS建站工具LNMP 1.4安装与使用-SSL自动配置续期和多版本PHP支持 OneinStack一键安装脚本-轻松部署Let’s Encrypt证书配置Https站点 LNMP 1.4和OneinStack都可以一键安装LAMP环境，这里我以OneinStack来作为操作演示，在安装OneinStack时选择组件时选择Apache即可，PHP建议使用7.0以上，数据库的话建议Mariadb。其它的缓存组件也可以安装。 绑定好域名与添加SSL证书。OneinStack在添加网站时直接就可以添加SSL证书了，同时要求绑定的域名必须提前解析到服务器的IP上，这样才可以一键生成Lets免费证书。 下载NextCloud程度包安装。到官网：https://nextcloud.com/install/#instructions-server，下载最新的程序包解压上传到网站的根目录。 为NextCloud建立新的数据库。 访问域名就会自动进入到NextCloud的安装页面了，填写你的管理员账号与密码，然后在下方设置好文件存储路径，最好与程序不要在同一个目录下。同时填入SQL数据库信息，完成安装。（点击放大） 完成后，你就可以登录到NextCloud后台，这就是NextCloud的用户管理界面。（点击放大） 二、LNMP安装NextCloud准备LNMP环境和上面一样，只是在LNMP 1.4和OneinStack安装时选择Nginx环境即可，其它的组件都一样有选择性地安装。如果安装了Zend OPcache，可能在安装时会提示错误：“PHP 被设置为移除内联块, 这将导致多个核心应用无法访问。 解决方法：修改php.ini中Opcache的参数进行修改，如果是Oneinstack的话需要在/usr/local/php/etc/php.d/ext-opcache.ini 中修改。找到此代码并改成：opcache.save_comments=1 ，因为默认是0，改完重启php-fpm就行。 编写URL地址重写规则。出现错误：No input file specified.，主要是Nginx还需要自己写重写规则，你可以将以下规则复制粘贴到/usr/local/nginx/conf/vhost/你的网站.conf，由于规则太多，你也可单独建立一个文件，然后在你的网站.conf引用即可。具体规则如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364#(可选)添加如下header主要为了安全 add_header X-Content-Type-Options nosniff; add_header X-XSS-Protection &quot;1; mode=block&quot;; add_header X-Robots-Tag none; add_header X-Download-Options noopen; add_header X-Permitted-Cross-Domain-Policies none; #(可选)为了支持user_webfinger app rewrite ^/.well-known/host-meta /public.php?service=host-meta last; rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last; #日历和联系人，建议加上 location = /.well-known/carddav &#123; return 301 $scheme://$host/remote.php/dav; &#125; location = /.well-known/caldav &#123; return 301 $scheme://$host/remote.php/dav; &#125; #设置上传文件的最大大小 client_max_body_size 512M; fastcgi_buffers 64 4K; #将所有请求转发到index.php上 location / &#123; rewrite ^ /index.php$uri; &#125; #安全设置，禁止访问部分敏感内容 location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ &#123; deny all; &#125; location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) &#123; deny all; &#125; #默认有，替换原来的就行 location ~ ^/(?:index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|ocs-provider/.+)\.php(?:$|/) &#123; fastcgi_split_path_info ^(.+\.php)(/.*)$; fastcgi_param PATH_INFO $fastcgi_path_info; fastcgi_param modHeadersAvailable true; fastcgi_param front_controller_active true; fastcgi_pass unix:/dev/shm/php-cgi.sock; #这边我改过，参照原来的 fastcgi_intercept_errors on; fastcgi_request_buffering off; include fastcgi.conf; &#125; #安全设置，禁止访问部分敏感内容 location ~ ^/(?:updater|ocs-provider)(?:$|/) &#123; try_files $uri/ =404; index index.php; &#125; location ~ \.(?:css|js|woff|svg|gif)$ &#123; try_files $uri /index.php$uri$is_args$args; add_header Cache-Control &quot;public, max-age=15778463&quot;; add_header X-Content-Type-Options nosniff; add_header X-XSS-Protection &quot;1; mode=block&quot;; add_header X-Robots-Tag none; add_header X-Download-Options noopen; add_header X-Permitted-Cross-Domain-Policies none; access_log off; &#125; location ~ \.(?:png|html|ttf|ico|jpg|jpeg)$ &#123; try_files $uri /index.php$uri$is_args$args; access_log off; &#125; fileinfo\Memcached\Redis等都可以通过OneinStack一键安装。 NextCloud安全与性能优化：这种提示一般在NextCloud的服务器管理中可以看到，建议缓存类的直接安装一个即可，安装多了也没有什么用。 为了您服务的安全和性能, 请将所有设置配置正确. 我们将会进行一些自动化检查以帮助您完成这项工作. 详情请查看 “小提示” 部分及相关文档. PHP 模块 ‘fileinfo’ 缺失. 我们强烈建议启用此模块以便在 MIME 类型检测时获得最准确的结果. HTTP 请求头 “Strict-Transport-Security” 没有配置为至少 “15552000” 秒. 出于增强安全性考虑, 我们推荐按照安全提示中的说明启用 HSTS. 内存缓存未配置. 如果可用, 请配置 memcache 以增强性能. 更多信息请查看我们的文档.PHP 的组件 OPcache 没有正确配置. 为了提供更好的性能, 我们建议在php.ini文件中使用下列设置: opcache.enable=1opcache.enable_cli=1opcache.interned_strings_buffer=8opcache.max_accelerated_files=10000opcache.memory_consumption=128opcache.save_comments=1opcache.revalidate_freq=1 NextCloud添加Memcached缓存。修改程序目录下的config目录中的config.php文件，在配置文件中添加如下，这个是多个Memcached实例，单个自己改： 1234567&apos;memcache.local&apos; =&gt; &apos;\OC\Memcache\APCu&apos;,&apos;memcache.distributed&apos; =&gt; &apos;\OC\Memcache\Memcached&apos;,&apos;memcached_servers&apos; =&gt; array( array(&apos;localhost&apos;, 11211), array(&apos;server1.example.com&apos;, 11211), array(&apos;server2.example.com&apos;, 11211), ), NextCloud添加Redis缓存。在配置文件中添加如下，这个是通过TCP连接的 12345&apos;memcache.local&apos; =&gt; &apos;\OC\Memcache\Redis&apos;,&apos;redis&apos; =&gt; array( &apos;host&apos; =&gt; &apos;localhost&apos;, &apos;port&apos; =&gt; 6379, ), 还有性能更好的UNIX连接 12345678&apos;memcache.local&apos; =&gt; &apos;\OC\Memcache\Redis&apos;,&apos;redis&apos; =&gt; array( &apos;host&apos; =&gt; &apos;/var/run/redis/redis.sock&apos;, &apos;port&apos; =&gt; 0, &apos;dbindex&apos; =&gt; 0, &apos;password&apos; =&gt; &apos;secret&apos;, &apos;timeout&apos; =&gt; 1.5, ), 同时，官方还推荐加入如下，来用于存储文件锁 1&apos;memcache.locking&apos; =&gt; &apos;\OC\Memcache\Redis&apos;, Nginx运行NextCloud一切正常。 三、NextCloud添加应用NextCloud提供了丰富了内置应用，并且这些应用可以直接在NextCloud的后台下载并安装，有点像我们的Wordpress插件一样直接安装。这些介绍几个有用的NextCloud插件，相信大家一定会用到。 SMTP发信与限制最大上传文件。这个直接在NextCloud的后台设置中就可以设置选项，SMTP可以让我们调用第三方的发信服务来发送NextCloud的邮件，自带的PHP发信也可以，但是基本上会被各大邮箱判定为垃圾邮件。 数据存储加密与外挂存储。首先到NextCloud应用中激活Default encryption module、External storage support这两个插件。 启用数据加密需要谨慎：因为数据一旦加密被启用, 之后上传到服务器的所有文件都将服务器上加密，只有当启用状态的加密模块支持解密并且所有前提都满足时 (例如: 设定恢复密钥) 才能解除加密。请注意, 加密会增加文件大小，单独的加密不能保证系统的安全性，你需要同时设置恢复密钥。 外挂存储主要是可以让NextCloud通过SMB / CIFS 登录 OC 的方式挂载第三方的存储应用，启用这个插件有些麻烦，可能提示：没有安装 “smbclient”. 安装命令：apt-get install smbclient和apt-get install php-smbclient。 四、总结至于选择Apache还是Nginx来运行NextCloud主要还是取决你对Nginx或者Apache的熟悉程度，LNMP 1.4和OneinStack对Nginx都做了很好了优化，Http 2.0、SSL证书还有缓存组件和PHP函数都可以一键安装与配置，省去了不少的麻烦。 NextCloud的图片预览、音乐视频在线播放等基本功能都是没有问题了，在使用NextCloud应用过程中倒是遇到了不少的问题。首要的问题就是NextCloud的应用配置比较难，例如Office文档插件、RSS在线阅读器插件等，都需要自己手动配置好服务器环境。 文章出自：挖站否 https://wzfou.com/nextcloud-install/，部分内容参考自：zrj96 版权所有。本站文章除注明出处外，皆为作者原创文章，可自由引用，但请注明来源。]]></content>
      <categories>
        <category>树莓派</category>
        <category>NextCloud</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>NextCloud</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[RASPBIAN STRETCH 安装桌面]]></title>
    <url>%2F2019%2F01%2F10%2FRASPBIAN-STRETCH-%E5%AE%89%E8%A3%85%E6%A1%8C%E9%9D%A2%2F</url>
    <content type="text"><![CDATA[首先更新系统123sudo apt-get updatesudo apt-get upgradesudo reboot 如果需要卸载原来的桌面1sudo apt-get autoremove raspberrypi-ui-mods lxterminal gvfs –no-install-recommends参数来避免安装非必须的文件，从而减小镜像的体积 安装GUI显示服务：1sudo apt-get install xserver-xorg 安装MATE桌面环境1sudo apt-get install mate-desktop-environment-core 安装登陆服务1sudo apt-get install lightdm 启动你的桌面1startx 同理，如果想换回官方桌面的话，只需要卸载MATE桌面并安装原来的就行了：123sudo apt-get install mate-desktop* //为了卸载干净直接用了 * 号// 安装官方桌面sudo apt-get install raspberrypi-ui-mods lxterminal gvfs]]></content>
      <categories>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[树莓派安装Chromium]]></title>
    <url>%2F2019%2F01%2F10%2F%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Chromium%2F</url>
    <content type="text"><![CDATA[【原文链接：https://blog.csdn.net/zbgjhy88/article/details/60323047】 Chromium是谷歌Chrome的开源版本，在此介绍一下当下该如何安装Chromium。 1.访问Ubuntu的源下载Chromium安装包，建议在pc中下载然后通过winscp传到树莓派中： 这个源对Chromium还在不断更新维护中，可以选择下载最新的包，截止收稿，最新的为65.0.3325.181-0ubuntu0.17.10.1，需要下载的是下面三个包： chromium-browser_65.0.3325.181-0ubuntu0.17.10.1_armhf.debchromium-codecs-ffmpeg-extra_65.0.3325.181-0ubuntu1_armhf.debchromium-browser-l10n_56.0.2924.76-0ubuntu0.16.10.1335_all.deb 网速不是很给力，我放到我的资源中了，大家可以点此下载（注意解压成三个文件再传到树莓派中）：树莓派Chromium-browser离线安装包 2.进入存放三个deb包的文件夹，执行命令：123sudo dpkg -i chromium-browser_56.0.2924.76-0ubuntu0.16.10.1335_armhf.deb sudo dpkg -i chromium-codecs-ffmpeg-extra_56.0.2924.76-0ubuntu0.16.10.1335_armhf.debsudo dpkg -i chromium-browser-l10n_65.0.3325.181-0ubuntu1_all.deb 安装过程中可能会遇到依赖关系问题，因为你的树莓派上可能安装了更新的一些lib包。可以尝试运行apt-get -f install或aptitude install解决。 完成。]]></content>
      <categories>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>Chromium</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[树莓派安装OctoPrint，搭建3D打印服务器]]></title>
    <url>%2F2019%2F01%2F10%2F%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85OctoPrint%2F</url>
    <content type="text"><![CDATA[【参考链接】官方文档：https://octoprint.org/download/ 一、在树莓派上搭建OctoPrint服务： 安装包含 pip 和 virtualenv 的 Python 2.7 .树莓派最新版本的系统已经自带 Python2.7，如果没有，可以手动安装：123$ sudo apt update$ sudo apt upgrade$ sudo apt install python virtualenv 用以下两种方式获取源码: 克隆 软件仓库: git clone https://github.com/foosel/OctoPrint.git 从Github上下载当前稳定版本的压缩包并解压 在源码目录创建一个Python虚拟环境（所有者为当前用户）： 12$ cd OctoPrint$ virtualenv venv 安装OctoPrint到上一步创建的虚拟环境目录：./venv/bin/python setup.py install 然后就可以通过运行 ./venv/bin/octoprint serve 命令启动OctoPrint，或者使用绝对路径：/path/to/OctoPrint/venv/bin/octoprint。另外也可以使用 daemon 参数在后台启动、重启、停止服务：1$ sudo /path/to/OctoPrint/venv/bin/octoprint dameon &#123;start|restart|stop&#125; 之后就可以通过IP加端口号访问到了： 在浏览器输入：http://树莓派的ip地址:5000 首次打开会运行设置向导，一步步按照自己的需求设置即可。其中 CuraEngine 路径部分，需要编译安装 CuraEngine 才可以填写，可以先跳过，按照后面的步骤执行完毕后再填写。 二、编译安装 CuraEngine如果要用树莓派切片，需要安装切片引擎 CuraEngine。编译安装步骤如下： 1. 安装 Protobuf &gt;= 3.0.0 安装libtool：apt install libtool 从 https://github.com/google/protobuf/releases下载 protobuf (下载ZIP并解压缩，或者克隆仓库)。Protocol Buffer 用于在CuraEngine 和用户界面之间通信。下载链接：https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-all-3.5.1.tar.gz 进入protobuf目录并运行 $ ./autogen.sh 这一步可能报错误信息：123&gt;&apos;+ autoreconf -f -i -Wall,no-obsolete&gt;./autogen.sh: 50: ./autogen.sh: autoreconf: not found&gt; 解决方法：sudo apt-get install autoconf 然后依次执行如下命令，配置并编译安装：123$ ./configure$ sudo make$ sudo make install #注意安装需要root权限 (如果在Linux系统中不能加载共享库，可以尝试执行 sudo ldconfig) 2. 编译安装 libArcus要编译 libArcus，需要以下几个包： Protobuf 3 (3.0+) CMake python3-dev (3.4+) python3-sip-dev (4.16+)按照上一步编译安装Protobuf，并检查后面三个包：1$ sudo apt install cmake python3-dev python3-sip-dev 然后开始编译：123456$ git clone https://github.com/Ultimaker/libArcus.git$ cd libArcus$ mkdir build &amp;&amp; cd build$ cmake ..$ make$ make install 这将会将 Arcus 库安装到CMake的默认安装位置：/usr/local。要改变默认值，请设置 CMAKE_INSTALL_PREFIX。示例目录默认也会创建，如果需要关闭，设置 BUILD_EXAMPLES 为 off。 注意：执行 cmake .. 命令的时候可能会报如下错误/usr/local/bin/protoc: error while loading shared libraries: libprotobuf.so.15: cannot open shared object file: No such file or directory CMake Warning at /usr/share/cmake-3.7/Modules/FindProtobuf.cmake:387 (message): Protobuf compiler version doesn’t match library version 3.5.1 Call Stack (most recent call first): CMakeLists.txt:19 (find_package)这里需要安装一下 protobuf-compiler 再重新 cmake 即可：12&gt; $ sudo apt install protobuf-compiler&gt; 3. 编译安装 CuraEngine进入 CuraEngine 目录并执行以下命令1234$ mkdir build &amp;&amp; cd build$ cmake ..$ make$ sudo make install 如果正常执行完毕，终端会提示1234Install the project...-- Install configuration: &quot;&quot;-- Installing: /usr/local/bin/CuraEngine-- Set runtime path of &quot;/usr/local/bin/CuraEngine&quot; to &quot;/usr/local/lib&quot; 最后在浏览器中打开 OctoPrint 界面，进入设置界面，导航至 CuraEngine (&lt;= 15.04) 选项卡，在右侧的 Path to CuraEngine 填写上面的路径 /usr/local/bin/CuraEngine，点击 Test 按钮，如果提示 The path is valid 表示 CuraEngine 安装成功。 4. 添加开机自启动修改 rc.local 文件，在终端输入并回车：1sudo nano /etc/rc.local 在打开的文本中找到exit 0，在此之前添加的代码在启动时都会被执行，在exit 0 之前添加一行代码：123# su命令是指定在root用户下执行这条命令，-c 表示执行完这条命令之后恢复原来的用户。# 这里直接用 sudo 以 root 用户执行sudo /path/to/OctoPrint/venv/bin/octoprint daemon start trl+o 保存，ctrl+x 退出，然后在终端输入：sudo reboot ,重启系统测试。 5. OctoPrint 中的其他设置项目Serial Connection Serial Port：Auto Baudrate：115200 Server Restart OctoPrint：sudo /path/to/OctoPrint/venv/bin/octoprint daemon restart Restart system：sudo reboot Shutdown system：sudo shutdown -h now]]></content>
      <categories>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>OctoPrint</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android PopupWindow怎么合理控制弹出位置]]></title>
    <url>%2F2018%2F08%2F26%2FAndroid-PopupWindow%E6%80%8E%E4%B9%88%E5%90%88%E7%90%86%E6%8E%A7%E5%88%B6%E5%BC%B9%E5%87%BA%E4%BD%8D%E7%BD%AE%EF%BC%88showAtLocation%EF%BC%89%2F</url>
    <content type="text"><![CDATA[说到PopupWindow，应该都会有种熟悉的感觉，使用起来也很简单 1234567891011121314// 一个自定义的布局，作为显示的内容Context context = null; // 真实环境中要赋值int layoutId = 0; // 布局IDView contentView = LayoutInflater.from(context).inflate(layoutId, null); final PopupWindow popupWindow = new PopupWindow(contentView, LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT, true);popupWindow.setTouchable(true);// 如果不设置PopupWindow的背景，有些版本就会出现一个问题：无论是点击外部区域还是Back键都无法dismiss弹框// 这里单独写一篇文章来分析popupWindow.setBackgroundDrawable(new ColorDrawable());// 设置好参数之后再showpopupWindow.showAsDropDown(contentView); 如果创建PopupWindow的时候没有指定高宽，那么showAsDropDown默认只会向下弹出显示，这种情况有个最明显的缺点就是：弹窗口可能被屏幕截断，显示不全，所以需要使用到另外一个方法showAtLocation,这个的坐标是相对于整个屏幕的，所以需要我们自己计算位置。 如下图所示，我们可以根据屏幕左上角的坐标A，屏幕高宽，点击View的左上角的坐标C，点击View的大小以及PopupWindow布局的大小计算出PopupWindow的显示位置B 计算方法源码如下： 12345678910111213141516171819202122232425262728293031/** * 计算出来的位置，y方向就在anchorView的上面和下面对齐显示，x方向就是与屏幕右边对齐显示 * 如果anchorView的位置有变化，就可以适当自己额外加入偏移来修正 * @param anchorView 呼出window的view * @param contentView window的内容布局 * @return window显示的左上角的xOff,yOff坐标 */private static int[] calculatePopWindowPos(final View anchorView, final View contentView) &#123; final int windowPos[] = new int[2]; final int anchorLoc[] = new int[2]; // 获取锚点View在屏幕上的左上角坐标位置 anchorView.getLocationOnScreen(anchorLoc); final int anchorHeight = anchorView.getHeight(); // 获取屏幕的高宽 final int screenHeight = ScreenUtils.getScreenHeight(anchorView.getContext()); final int screenWidth = ScreenUtils.getScreenWidth(anchorView.getContext()); contentView.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED); // 计算contentView的高宽 final int windowHeight = contentView.getMeasuredHeight(); final int windowWidth = contentView.getMeasuredWidth(); // 判断需要向上弹出还是向下弹出显示 final boolean isNeedShowUp = (screenHeight - anchorLoc[1] - anchorHeight &lt; windowHeight); if (isNeedShowUp) &#123; windowPos[0] = screenWidth - windowWidth; windowPos[1] = anchorLoc[1] - windowHeight; &#125; else &#123; windowPos[0] = screenWidth - windowWidth; windowPos[1] = anchorLoc[1] + anchorHeight; &#125; return windowPos;&#125; 接下来调用showAtLoaction显示： 123456View windowContentViewRoot = 我们要设置给PopupWindow进行显示的Viewint windowPos[] = calculatePopWindowPos(view, windowContentViewRoot);int xOff = 20；// 可以自己调整偏移windowPos[0] -= xOff;popupwindow.showAtLocation(view, Gravity.TOP | Gravity.START, windowPos[0], windowPos[1]);// windowContentViewRoot是根布局View 上面的例子只是提供了一种计算方式，在实际开发中可以根据需求自己计算，比如anchorView在左边的情况，在中间的情况，可以根据实际需求写一个弹出位置能够自适应的PopupWindow。 补充上获取屏幕高宽的代码ScreenUtils.java： 123456789101112/** * 获取屏幕高度(px) */public static int getScreenHeight(Context context) &#123; return context.getResources().getDisplayMetrics().heightPixels;&#125;/** * 获取屏幕宽度(px) */public static int getScreenWidth(Context context) &#123; return context.getResources().getDisplayMetrics().widthPixels;&#125; Demo截图展示： 看完觉得有用记得点击推荐支持一下，谢谢 Demo下载地址：https://github.com/PopFisher/SmartPopupWindow]]></content>
      <tags>
        <tag>Android PopupWindow</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AndroidSwitch控件修改样式]]></title>
    <url>%2F2018%2F05%2F22%2FAndroidSwitch%E6%8E%A7%E4%BB%B6%E4%BF%AE%E6%94%B9%E6%A0%B7%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[Android中自带的Switch控件在很多时候总觉得和整体系统风格不符，很多时候，自定义Switch是一种方法。 但其实不用这么麻烦，安卓自带的Switch通过修改一些属性，也可以达到和自定义Switch差不多的一个效果。 个人感觉，Switch的属性设置和其他控件还是有挺大区别的。因此，写下此文，方便有需要的同学参考。 先上效果图： 以上便是修改后效果 与 原生Switch的效果对比。代码在文章底部给出 实现方式： 1.底部滑动条，在开关打开状态为绿色，开关关闭状态为灰色在 res/drawable 文件夹下面，写两个滑动条的底图 ，通过一个选择器selector进行控制。 gray_track.xml ：非打开状态，灰色的底图 123456789101112&lt;?xmlversion="1.0"encoding="utf-8"?&gt;&lt;shapexmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle"&gt; &lt;!--高度30此处设置宽度无效--&gt; &lt;size android:height="30dp"/&gt; &lt;!--圆角弧度15--&gt; &lt;corners android:radius="15dp"/&gt; &lt;!--变化率定义从左到右的颜色不变--&gt; &lt;gradient android:endColor="#888888" android:startColor="#888888"/&gt;&lt;/shape&gt; green_track.xml：打开状态下，绿色的底图。 1234567891011&lt;?xmlversion="1.0"encoding="utf-8"?&gt;&lt;shapexmlns:android="http://schemas.android.com/apk/res/android"&gt; &lt;!--高度40--&gt; &lt;sizeandroid:height="30dp"/&gt; &lt;!--圆角弧度20--&gt; &lt;cornersandroid:radius="15dp"/&gt; &lt;!--变化率--&gt; &lt;gradient android:endColor="#33da33" android:startColor="#33da33"/&gt;&lt;/shape&gt; 选择器 track.xml 用于控制Switch不同状态下，滑动条的底图 123456&lt;?xmlversion="1.0"encoding="utf-8"?&gt;&lt;!--底层下滑条的样式选择器，可控制Switch在不同状态下，底下下滑条的颜色--&gt;&lt;selector xmlns:android="http://schemas.android.com/apk/res/android"&gt; &lt;item android:state_checked="true" android:drawable="@drawable/green_track"/&gt; &lt;item android:drawable="@drawable/gray_track"/&gt;&lt;/selector&gt; 2. 滑动按钮：底色我用的接近白色的淡灰色，打开时，边上的一圈线条为灰色，关闭时，边上的一圈线条为绿色实现方式和底部滑动一致 gray_thumb.xml :关闭状态，按钮边上一圈颜色为深灰色 1234567891011121314&lt;?xmlversion="1.0"encoding="utf-8"?&gt;&lt;shapexmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle"&gt; &lt;!--高度40--&gt; &lt;sizeandroid:height="40dp"android:width="40dp"/&gt; &lt;!--圆角弧度20--&gt; &lt;cornersandroid:radius="20dp"/&gt; &lt;!--变化率--&gt; &lt;gradient android:endColor="#eeeeee" android:startColor="#eeeeee"/&gt; &lt;strokeandroid:width="1dp" android:color="#666666"/&gt;&lt;/shape&gt; green_thumb.xml : 打开状态，按钮边上一圈的颜色为绿色 1234567891011121314&lt;?xmlversion="1.0"encoding="utf-8"?&gt;&lt;shapexmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle"&gt; &lt;!--高度40--&gt; &lt;size android:height="40dp" android:width="40dp"/&gt; &lt;!--圆角弧度20--&gt; &lt;corners android:radius="20dp"/&gt; &lt;!--变化率--&gt; &lt;gradient android:endColor="#eeeeee" android:startColor="#eeeeee"/&gt; &lt;stroke android:width="1dp" android:color="#33da33"/&gt;&lt;/shape&gt; 选择器 thumb.xml 用于控制Switch不同状态下，按钮的显示状态 123456&lt;?xmlversion="1.0"encoding="utf-8"?&gt;&lt;!--按钮的选择器，可以设置按钮在不同状态下的时候，按钮不同的颜色--&gt;&lt;selector xmlns:android="http://schemas.android.com/apk/res/android"&gt; &lt;item android:state_checked="true" android:drawable="@drawable/green_thumb"/&gt; &lt;item android:drawable="@drawable/gray_thumb"/&gt;&lt;/selector&gt; 3. 将以上选择器设置给Switch，就好了界面 activity_main.xml 12345678910111213141516171819&lt;?xmlversion="1.0"encoding="utf-8"?&gt;&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent" android:layout_height="match_parent" android:orientation="vertical"&gt; &lt;Switch android:layout_width="wrap_content" android:layout_height="wrap_content" android:switchMinWidth="20dp" android:textOn="" android:textOff="" android:thumb="@drawable/thumb" android:track="@drawable/track"/&gt; &lt;!--用于对比使用的不设置任何属性的Switch--&gt; &lt;Switch android:layout_width="wrap_content" android:layout_height="wrap_content" /&gt;&lt;/LinearLayout&gt; 4.高度，宽度的设置细心的同学会发现，修改 android:layout_width ， android:layout_height 这两个属性，并不会实际修改Switch的大小 设置大了，边上会出现空白部分，设置小了，Switch显示不全。 实际设置高度方法： 上面定义滑动条和按钮底图的地方相信大家都注意到， 这行代码， 修改 green_track.xml,gray_track.xml 中的高度，即可修改高度（修改green_thumb.xml gray_thumb.xml 中的高度貌似无效）。 实际修改宽度的方法： （1）修改滑动按钮的宽度：滑动按钮的宽度和按钮上的文字有关， 想要按钮变长，在按钮显示的文字上添加几个空字符串即可，想要按钮变短的话，减少按钮上显示的字即可（修改按钮上字体大小也可以试试） Switch的属性 12android:textOn=" "android:textOff=" " （2）修改按钮 打开，关闭 两种状态之间滑动距离（貌似小到一定程度，再改小就无效了） Switch的属性 android:switchMinWidth=&quot;20dp&quot; 通过以上的设置，相信能满足大部分实际使用的需求了，希望对大家有帮助。 相信源代码才是大家最关注的吧，哈哈，我也是！下载地址： http://download.csdn.net/detail/qq_34763699/9751234 百度网盘：http://pan.baidu.com/s/1slp1CZV]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ArcGIS Runtime中坐标的转换]]></title>
    <url>%2F2018%2F05%2F12%2FArcGIS-Runtime%E4%B8%AD%E5%9D%90%E6%A0%87%E7%9A%84%E8%BD%AC%E6%8D%A2%2F</url>
    <content type="text"><![CDATA[【原文链接：https://blog.csdn.net/bit_kaki/article/details/76252181】 在我们的GIS应用项目里，常常遇见坐标转换的问题。最常见的就是WGS84坐标转其他坐标系，原因是WGS84坐标系是目前GPS数据采集所用的坐标系，而我国实际生产项目里常用的地图却是北京54坐标系，西安80坐标系以及中国大地2000坐标系等。所以当我们用设备采集到GPS经纬度以后，需要将其进行坐标转换才可以正确显示到我们使用的地图上。 对于坐标转换，有一种高精度而且任何时候都可以采用的方法是七参数坐标转换法，对于这种方法，我在之前一篇博客进行了详细的说明，地址是：http://blog.csdn.net/bit_kaki/article/details/52733429 。 但是在实际情况下，我们不一定拥有七参数，而且对采集的精度要求也并不那么高。在这个时候，其实ArcGIS for Android的库里已经给我们封装了个一个方法，我们可以直接调用就可以。这个方法就是123public static Geometry project(Geometry geometry, SpatialReference inputSR, SpatialReference outputSR) &#123; return GeometryEngineCore.project(geometry, inputSR, outputSR);&#125; 这个方法里三个参数分别是需要转换矢量对象（点、线、面），输入对象的空间参考坐标系，输出对象的空间参考坐标系。最后得到一个转换后的矢量对象。 比如我们程序里的MapView参数为mMapView，那么要将一个点从WGS84坐标系转换为MapView上加载图层的坐标系，我们只需要：1Point point=(Point) GeometryEngine.project(wgs, SpatialReference.create(4326),mMapView.getSpatialReference()); 其中wgs是一个WGS84坐标系上的点的坐标，SpatialReference.create（4326）指的是输入点的空间坐标系mMapView.getSpatialReference（）是mMapView目前加载图层所使用的坐标系。 方法挺简单的，但是对于这个方法我们可以稍作一下研究里面SpatialReference参数的意义。 SpatialReference在指的ArcGIS里的地理坐标系对象，里面主要包含了五个参数： WKID：空间参考系统编号。 WKT：空间参考系统文本。 Unit：空间参考系统单位。 Tolerance：系统容差。 GCS：地理坐标系。 这五个参数里第一个或者第二个是必须存在的，根据编号或者文本就可以获取到对应的空间坐标系。其中通过WKID来建立地理坐标系对象是最常见的，WKID，全称是Well Known ID，即ArcGIS对众多的空间坐标系进行的编号。只要我们知道空间参考坐标系所对应的编号，就可以通过这个编号获取到该控件参考坐标系。比如上个例子用到的SpatialReference.create（4326），4326对应的是WGS84坐标系，所以SpatialReference.create（4326）就是WGS85地理坐标系对象了。通过阅读Esri官方SDK文档，可以知道投影坐标枚举esriSRProjCSType包含1442个WKID,esriSRProjCS4Type包含1224个WKID。在这里将国内常用坐标系统的WKID整理如下： 类别 WKID 名称 地理坐标 4214 GCS_Beijing_1954 地理坐标 4326 GCS_WGS_1984 地理坐标 4490 GCS_China_Geodetic_Coordinate_System_2000 地理坐标 4555 GCS_New_Beijing 地理坐标 4610 GCS_Xian_1980 投影坐标 2327 Xian_1980_GK_Zone_13 投影坐标 2328 Xian_1980_GK_Zone_14 投影坐标 2329 Xian_1980_GK_Zone_15 投影坐标 2330 Xian_1980_GK_Zone_16 投影坐标 2331 Xian_1980_GK_Zone_17 投影坐标 2332 Xian_1980_GK_Zone_18 投影坐标 2333 Xian_1980_GK_Zone_19 投影坐标 2334 Xian_1980_GK_Zone_20 投影坐标 2335 Xian_1980_GK_Zone_21 投影坐标 2336 Xian_1980_GK_Zone_22 投影坐标 2337 Xian_1980_GK_Zone_23 投影坐标 2338 Xian_1980_GK_CM_75E 投影坐标 2339 Xian_1980_GK_CM_81E 投影坐标 2340 Xian_1980_GK_CM_87E 投影坐标 2341 Xian_1980_GK_CM_93E 投影坐标 2342 Xian_1980_GK_CM_99E 投影坐标 2343 Xian_1980_GK_CM_105E 投影坐标 2344 Xian_1980_GK_CM_111E 投影坐标 2345 Xian_1980_GK_CM_117E 投影坐标 2346 Xian_1980_GK_CM_123E 投影坐标 2347 Xian_1980_GK_CM_129E 投影坐标 2348 Xian_1980_GK_CM_135E 投影坐标 2349 Xian_1980_3_Degree_GK_Zone_25 投影坐标 2350 Xian_1980_3_Degree_GK_Zone_26 投影坐标 2351 Xian_1980_3_Degree_GK_Zone_27 投影坐标 2352 Xian_1980_3_Degree_GK_Zone_28 投影坐标 2353 Xian_1980_3_Degree_GK_Zone_29 投影坐标 2354 Xian_1980_3_Degree_GK_Zone_30 投影坐标 2355 Xian_1980_3_Degree_GK_Zone_31 投影坐标 2356 Xian_1980_3_Degree_GK_Zone_32 投影坐标 2357 Xian_1980_3_Degree_GK_Zone_33 投影坐标 2358 Xian_1980_3_Degree_GK_Zone_34 投影坐标 2359 Xian_1980_3_Degree_GK_Zone_35 投影坐标 2360 Xian_1980_3_Degree_GK_Zone_36 投影坐标 2361 Xian_1980_3_Degree_GK_Zone_37 投影坐标 2362 Xian_1980_3_Degree_GK_Zone_38 投影坐标 2363 Xian_1980_3_Degree_GK_Zone_39 投影坐标 2364 Xian_1980_3_Degree_GK_Zone_40 投影坐标 2365 Xian_1980_3_Degree_GK_Zone_41 投影坐标 2366 Xian_1980_3_Degree_GK_Zone_42 投影坐标 2367 Xian_1980_3_Degree_GK_Zone_43 投影坐标 2368 Xian_1980_3_Degree_GK_Zone_44 投影坐标 2369 Xian_1980_3_Degree_GK_Zone_45 投影坐标 2370 Xian_1980_3_Degree_GK_CM_75E 投影坐标 2371 Xian_1980_3_Degree_GK_CM_78E 投影坐标 2372 Xian_1980_3_Degree_GK_CM_81E 投影坐标 2373 Xian_1980_3_Degree_GK_CM_84E 投影坐标 2374 Xian_1980_3_Degree_GK_CM_87E 投影坐标 2375 Xian_1980_3_Degree_GK_CM_90E 投影坐标 2376 Xian_1980_3_Degree_GK_CM_93E 投影坐标 2377 ian_1980_3_Degree_GK_CM_96E 投影坐标 2378 Xian_1980_3_Degree_GK_CM_99E 投影坐标 2379 Xian_1980_3_Degree_GK_CM_102E 投影坐标 2380 Xian_1980_3_Degree_GK_CM_105E 投影坐标 2381 Xian_1980_3_Degree_GK_CM_108E 投影坐标 2382 Xian_1980_3_Degree_GK_CM_111E 投影坐标 2383 Xian_1980_3_Degree_GK_CM_114E 投影坐标 2384 Xian_1980_3_Degree_GK_CM_117E 投影坐标 2385 Xian_1980_3_Degree_GK_CM_120E 投影坐标 2386 Xian_1980_3_Degree_GK_CM_123E 投影坐标 2387 Xian_1980_3_Degree_GK_CM_126E 投影坐标 2388 Xian_1980_3_Degree_GK_CM_129E 投影坐标 2389 Xian_1980_3_Degree_GK_CM_132E 投影坐标 2390 Xian_1980_3_Degree_GK_CM_135E 投影坐标 2401 Beijing_1954_3_Degree_GK_Zone_25 投影坐标 2402 Beijing_1954_3_Degree_GK_Zone_26 投影坐标 2403 Beijing_1954_3_Degree_GK_Zone_27 投影坐标 2404 Beijing_1954_3_Degree_GK_Zone_28 投影坐标 2405 Beijing_1954_3_Degree_GK_Zone_29 投影坐标 2406 Beijing_1954_3_Degree_GK_Zone_30 投影坐标 2407 Beijing_1954_3_Degree_GK_Zone_31 投影坐标 2408 Beijing_1954_3_Degree_GK_Zone_32 投影坐标 2409 Beijing_1954_3_Degree_GK_Zone_33 投影坐标 2410 Beijing_1954_3_Degree_GK_Zone_34 投影坐标 2411 Beijing_1954_3_Degree_GK_Zone_35 投影坐标 2412 Beijing_1954_3_Degree_GK_Zone_36 投影坐标 2413 Beijing_1954_3_Degree_GK_Zone_37 投影坐标 2414 Beijing_1954_3_Degree_GK_Zone_38 投影坐标 2415 Beijing_1954_3_Degree_GK_Zone_39 投影坐标 2416 Beijing_1954_3_Degree_GK_Zone_40 投影坐标 2417 Beijing_1954_3_Degree_GK_Zone_41 投影坐标 2418 Beijing_1954_3_Degree_GK_Zone_42 投影坐标 2419 Beijing_1954_3_Degree_GK_Zone_43 投影坐标 2420 Beijing_1954_3_Degree_GK_Zone_44 投影坐标 2421 Beijing_1954_3_Degree_GK_Zone_45 投影坐标 2422 Beijing_1954_3_Degree_GK_CM_75E 投影坐标 2423 Beijing_1954_3_Degree_GK_CM_78E 投影坐标 2424 Beijing_1954_3_Degree_GK_CM_81E 投影坐标 2425 Beijing_1954_3_Degree_GK_CM_84E 投影坐标 2426 Beijing_1954_3_Degree_GK_CM_87E 投影坐标 2427 Beijing_1954_3_Degree_GK_CM_90E 投影坐标 2428 Beijing_1954_3_Degree_GK_CM_93E 投影坐标 2429 Beijing_1954_3_Degree_GK_CM_96E 投影坐标 2430 Beijing_1954_3_Degree_GK_CM_99E 投影坐标 2431 Beijing_1954_3_Degree_GK_CM_102E 投影坐标 2432 Beijing_1954_3_Degree_GK_CM_105E 投影坐标 2433 Beijing_1954_3_Degree_GK_CM_108E 投影坐标 2434 Beijing_1954_3_Degree_GK_CM_111E 投影坐标 2435 Beijing_1954_3_Degree_GK_CM_114E 投影坐标 2436 Beijing_1954_3_Degree_GK_CM_117E 投影坐标 2437 Beijing_1954_3_Degree_GK_CM_120E 投影坐标 2438 Beijing_1954_3_Degree_GK_CM_123E 投影坐标 2439 Beijing_1954_3_Degree_GK_CM_126E 投影坐标 2440 Beijing_1954_3_Degree_GK_CM_129E 投影坐标 2441 Beijing_1954_3_Degree_GK_CM_132E 投影坐标 2442 Beijing_1954_3_Degree_GK_CM_135E 投影坐标 3395 WGS_1984_World_Mercator 投影坐标 4491 CGCS2000_GK_Zone_13 投影坐标 4492 CGCS2000_GK_Zone_14 投影坐标 4493 CGCS2000_GK_Zone_15 投影坐标 4494 CGCS2000_GK_Zone_16 投影坐标 4495 CGCS2000_GK_Zone_17 投影坐标 4496 CGCS2000_GK_Zone_18 投影坐标 4497 CGCS2000_GK_Zone_19 投影坐标 4498 CGCS2000_GK_Zone_20 投影坐标 4499 CGCS2000_GK_Zone_21 投影坐标 4500 CGCS2000_GK_Zone_22 投影坐标 4501 CGCS2000_GK_Zone_23 投影坐标 4502 CGCS2000_GK_CM_75E 投影坐标 4503 CGCS2000_GK_CM_81E 投影坐标 4504 CGCS2000_GK_CM_87E 投影坐标 4505 CGCS2000_GK_CM_93E 投影坐标 4506 CGCS2000_GK_CM_99E 投影坐标 4507 CGCS2000_GK_CM_105E 投影坐标 4508 CGCS2000_GK_CM_111E 投影坐标 4509 CGCS2000_GK_CM_117E 投影坐标 4510 CGCS2000_GK_CM_123E 投影坐标 4511 CGCS2000_GK_CM_129E 投影坐标 4512 CGCS2000_GK_CM_135E 投影坐标 4513 CGCS2000_3_Degree_GK_Zone_25 投影坐标 4514 CGCS2000_3_Degree_GK_Zone_26 投影坐标 4515 CGCS2000_3_Degree_GK_Zone_27 投影坐标 4516 CGCS2000_3_Degree_GK_Zone_28 投影坐标 4517 CGCS2000_3_Degree_GK_Zone_29 投影坐标 4518 CGCS2000_3_Degree_GK_Zone_30 投影坐标 4519 CGCS2000_3_Degree_GK_Zone_31 投影坐标 4520 CGCS2000_3_Degree_GK_Zone_32 投影坐标 4521 CGCS2000_3_Degree_GK_Zone_33 投影坐标 4522 CGCS2000_3_Degree_GK_Zone_34 投影坐标 4523 CGCS2000_3_Degree_GK_Zone_35 投影坐标 4524 CGCS2000_3_Degree_GK_Zone_36 投影坐标 4525 CGCS2000_3_Degree_GK_Zone_37 投影坐标 4526 CGCS2000_3_Degree_GK_Zone_38 投影坐标 4527 CGCS2000_3_Degree_GK_Zone_39 投影坐标 4528 CGCS2000_3_Degree_GK_Zone_40 投影坐标 4529 CGCS2000_3_Degree_GK_Zone_41 投影坐标 4530 CGCS2000_3_Degree_GK_Zone_42 投影坐标 4531 CGCS2000_3_Degree_GK_Zone_43 投影坐标 4532 CGCS2000_3_Degree_GK_Zone_44 投影坐标 4533 CGCS2000_3_Degree_GK_Zone_45 投影坐标 4534 CGCS2000_3_Degree_GK_CM_75E 投影坐标 4535 CGCS2000_3_Degree_GK_CM_78E 投影坐标 4536 CGCS2000_3_Degree_GK_CM_81E 投影坐标 4537 CGCS2000_3_Degree_GK_CM_84E 投影坐标 4538 CGCS2000_3_Degree_GK_CM_87E 投影坐标 4539 CGCS2000_3_Degree_GK_CM_90E 投影坐标 4540 CGCS2000_3_Degree_GK_CM_93E 投影坐标 4541 CGCS2000_3_Degree_GK_CM_96E 投影坐标 4542 CGCS2000_3_Degree_GK_CM_99E 投影坐标 4543 CGCS2000_3_Degree_GK_CM_102E 投影坐标 4544 CGCS2000_3_Degree_GK_CM_105E 投影坐标 4545 CGCS2000_3_Degree_GK_CM_108E 投影坐标 4546 CGCS2000_3_Degree_GK_CM_111E 投影坐标 4547 CGCS2000_3_Degree_GK_CM_114E 投影坐标 4548 CGCS2000_3_Degree_GK_CM_117E 投影坐标 4549 CGCS2000_3_Degree_GK_CM_120E 投影坐标 4550 CGCS2000_3_Degree_GK_CM_123E 投影坐标 4551 CGCS2000_3_Degree_GK_CM_126E 投影坐标 4552 CGCS2000_3_Degree_GK_CM_129E 投影坐标 4553 CGCS2000_3_Degree_GK_CM_132E 投影坐标 4554 CGCS2000_3_Degree_GK_CM_135E 投影坐标 4568 New_Beijing_Gauss_Kruger_Zone_13 投影坐标 4569 New_Beijing_Gauss_Kruger_Zone_14 投影坐标 4570 New_Beijing_Gauss_Kruger_Zone_15 投影坐标 4571 New_Beijing_Gauss_Kruger_Zone_16 投影坐标 4572 New_Beijing_Gauss_Kruger_Zone_17 投影坐标 4573 New_Beijing_Gauss_Kruger_Zone_18 投影坐标 4574 New_Beijing_Gauss_Kruger_Zone_19 投影坐标 4575 New_Beijing_Gauss_Kruger_Zone_20 投影坐标 4576 New_Beijing_Gauss_Kruger_Zone_21 投影坐标 4577 New_Beijing_Gauss_Kruger_Zone_22 投影坐标 4578 New_Beijing_Gauss_Kruger_Zone_23 投影坐标 4579 New_Beijing_Gauss_Kruger_CM_75E 投影坐标 4580 New_Beijing_Gauss_Kruger_CM_81E 投影坐标 4581 New_Beijing_Gauss_Kruger_CM_87E 投影坐标 4582 New_Beijing_Gauss_Kruger_CM_93E 投影坐标 4583 New_Beijing_Gauss_Kruger_CM_99E 投影坐标 4584 New_Beijing_Gauss_Kruger_CM_105E 投影坐标 4585 New_Beijing_Gauss_Kruger_CM_111E 投影坐标 4586 New_Beijing_Gauss_Kruger_CM_117E 投影坐标 4587 New_Beijing_Gauss_Kruger_CM_123E 投影坐标 4588 New_Beijing_Gauss_Kruger_CM_129E 投影坐标 4589 New_Beijing_Gauss_Kruger_CM_135E 投影坐标 4652 New_Beijing_3_Degree_Gauss_Kruger_Zone_25 投影坐标 4653 New_Beijing_3_Degree_Gauss_Kruger_Zone_26 投影坐标 4654 New_Beijing_3_Degree_Gauss_Kruger_Zone_27 投影坐标 4655 New_Beijing_3_Degree_Gauss_Kruger_Zone_28 投影坐标 4656 New_Beijing_3_Degree_Gauss_Kruger_Zone_29 投影坐标 4766 New_Beijing_3_Degree_Gauss_Kruger_Zone_30 投影坐标 4767 New_Beijing_3_Degree_Gauss_Kruger_Zone_31 投影坐标 4768 New_Beijing_3_Degree_Gauss_Kruger_Zone_32 投影坐标 4769 New_Beijing_3_Degree_Gauss_Kruger_Zone_33 投影坐标 4770 New_Beijing_3_Degree_Gauss_Kruger_Zone_34 投影坐标 4771 New_Beijing_3_Degree_Gauss_Kruger_Zone_35 投影坐标 4772 New_Beijing_3_Degree_Gauss_Kruger_Zone_36 投影坐标 4773 New_Beijing_3_Degree_Gauss_Kruger_Zone_37 投影坐标 4774 New_Beijing_3_Degree_Gauss_Kruger_Zone_38 投影坐标 4775 New_Beijing_3_Degree_Gauss_Kruger_Zone_39 投影坐标 4776 New_Beijing_3_Degree_Gauss_Kruger_Zone_40 投影坐标 4777 New_Beijing_3_Degree_Gauss_Kruger_Zone_41 投影坐标 4778 New_Beijing_3_Degree_Gauss_Kruger_Zone_42 投影坐标 4779 New_Beijing_3_Degree_Gauss_Kruger_Zone_43 投影坐标 4780 New_Beijing_3_Degree_Gauss_Kruger_Zone_44 投影坐标 4781 New_Beijing_3_Degree_Gauss_Kruger_Zone_45 投影坐标 4782 New_Beijing_3_Degree_Gauss_Kruger_CM_75E 投影坐标 4783 New_Beijing_3_Degree_Gauss_Kruger_CM_78E 投影坐标 4784 New_Beijing_3_Degree_Gauss_Kruger_CM_81E 投影坐标 4785 New_Beijing_3_Degree_Gauss_Kruger_CM_84E 投影坐标 4786 New_Beijing_3_Degree_Gauss_Kruger_CM_87E 投影坐标 4787 New_Beijing_3_Degree_Gauss_Kruger_CM_90E 投影坐标 4788 New_Beijing_3_Degree_Gauss_Kruger_CM_93E 投影坐标 4789 New_Beijing_3_Degree_Gauss_Kruger_CM_96E 投影坐标 4790 New_Beijing_3_Degree_Gauss_Kruger_CM_99E 投影坐标 4791 New_Beijing_3_Degree_Gauss_Kruger_CM_102E 投影坐标 4792 New_Beijing_3_Degree_Gauss_Kruger_CM_105E 投影坐标 4793 New_Beijing_3_Degree_Gauss_Kruger_CM_108E 投影坐标 4794 New_Beijing_3_Degree_Gauss_Kruger_CM_111E 投影坐标 4795 New_Beijing_3_Degree_Gauss_Kruger_CM_114E 投影坐标 4796 New_Beijing_3_Degree_Gauss_Kruger_CM_117E 投影坐标 4797 New_Beijing_3_Degree_Gauss_Kruger_CM_120E 投影坐标 4798 New_Beijing_3_Degree_Gauss_Kruger_CM_123E 投影坐标 4799 New_Beijing_3_Degree_Gauss_Kruger_CM_126E 投影坐标 4800 New_Beijing_3_Degree_Gauss_Kruger_CM_129E 投影坐标 4822 New_Beijing_3_Degree_Gauss_Kruger_CM_135E 以后需要坐标转换，直接查询这个表就可以了。 参考文章：http://www.cnblogs.com/liweis/p/5951032.htmlhttp://blog.sina.com.cn/s/blog_80a9926b0101g0e0.htmlhttp://blog.csdn.net/zhouxuguang236/article/details/10752199]]></content>
      <categories>
        <category>Android</category>
        <category>ArcGIS Runtime</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>ArcGIS Runtime</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F05%2F11%2Fhello-world%2F</url>
    <content type="text"><![CDATA[欢迎来到 Hexo! 来发布你的第一篇博客吧. 查看 文档 以获取更多信息. 如果你在使用Hexo的过程中遇到任何问题, 你可以来 troubleshooting 寻找答案或者在 GitHub上提问. 快速开始创建新博客1$ hexo new "My New Post" 更多信息: Writing 运行服务1$ hexo server 更多信息: Server 生成静态文件1$ hexo generate 更多信息: Generating 推送到远程站点1$ hexo deploy 更多信息: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[树莓派：通过红外控制蓝牙音乐播放]]></title>
    <url>%2F2016%2F11%2F19%2FRaspberry-IR-COntrol-BluetoothMusic%2F</url>
    <content type="text"><![CDATA[【参考资料】树莓派学习笔记——UART使用linux下串口调试（只用shell） 本文的目的是在上一篇文章（树莓派红外遥控测试）的基础上，用红外控制树莓派，向蓝牙模块发送串口指令，进而控制蓝牙模块的音乐播放。 【准备材料】 树莓派一个 红外接收器（本文用的是VS1838B） 红外遥控器 蓝牙模块（BK8000L） 杜邦线若干条 【详细步骤】 1.将所有配件连接起来这是上次用到的遥控器和红外接收器（VS1838B）：还有本次用到的蓝牙模块（BK8000L）：树莓派引脚编号参考：将蓝牙模块的串口接到树莓派的串口上面，TX接RX，RX接TX，VCC接3.3V，GND接GND，所有配件连接起来后：2.修改树莓派系统文件因为树莓派的串口默认用来远程登录用，所有先修改系统文件，将其功能恢复。【1】修改 /boot/cmdline.txt执行1sudo leafpad /boot/cmdline.txt 删除加粗部分：dwc_otg.lpm_enable=0 console=serial0,115200 console=tty1 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait最终变为:1dwc_otg.lpm_enable=0 console=tty1 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait 网上还说要修改 /etc/inittab，不过在我的系统里面没有这个文件，不知道为什么。网上说要注释掉最后一行内容：T0:23:respawn:/sbin/getty -L ttyAMA0 115200 vt100 最后重启树莓派。 2.测试蓝牙模块串口通信根据模块资料：12345678控制指令格式：AT+&lt;CMD&gt;[&lt;param&gt;]\r\n数据反馈格式：&lt;IND&gt;[&lt;param&gt;]\r\n说明：控制指令是控制主机给蓝牙的控制命令，以“AT+”开始后面紧跟&lt;CMD&gt;控制指令，如果该指令带参数，则紧跟指令后继续传输&lt;param&gt;参数，最后以”\r\n”结束。数据反馈是蓝牙把各种状态和数据信息反馈给主机，&lt;IND&gt;是反馈指令，如果需要带参数，则紧跟&lt;IND&gt;之后继续传输&lt;param&gt;参数。注意： \r\n：字符型为 换行，十六进制为 0x0D ，0x0A。 树莓派上串口通信可以用Python的serial模块，这里只做测试用，为了方便就用shell直接发送命令了。树莓派中打开终端，输入：123# echo -e 可以发送回车等特殊字符echo -e &quot;AT+MN\r&quot; &gt;/dev/ttyAMA0cat /dev/ttyAMA0 第一条指令为向蓝牙模块发送串口指令“AT+MN\r”，即请求蓝牙模块的名称。“ttyAMA0”为树莓派的串口设备名字第二条指令为接收来自串口设备“ttyAMA0”的数据，例如上述命令执行完毕后，如果顺利的话，终端会返回蓝牙模块的名字：1NA: BK8000L 表示串口通信没有问题。 3.实现红外控制蓝牙模块要想实现对应功能，只需要通过树莓派向蓝牙模块发送串口指令即可，如要向实现播放/暂停功能，需要通过串口想蓝牙模块发送：12AT+MA\r #\r为换行符 在上篇文章（树莓派红外遥控测试）中已经实现了红外控制树莓派执行相应的命令，其中按键与对应命令的配置文件存储在 /home/pi/.lircrc 文件中。所以这次打开这个文件并编辑1sudo leafpad /home/pi/.lircrc 添加如下代码并保存：12345678910111213141516171819202122232425begin prog = irexec button = KEY_PLAY config = sudo echo -e &quot;AT+MA\r&quot; &gt; /dev/ttyAMA0; cat /dev/ttyAMA0endbegin prog = irexec button = KEY_NEXT config = sudo echo -e &quot;AT+MD\r&quot; &gt; /dev/ttyAMA0; cat /dev/ttyAMA0endbegin prog = irexec button = KEY_PREVIOUS config = sudo echo -e &quot;AT+ME\r&quot; &gt; /dev/ttyAMA0; cat /dev/ttyAMA0endbegin prog = irexec button = KEY_VOLUMEUP config = sudo echo -e &quot;AT+CK\r&quot; &gt; /dev/ttyAMA0; cat /dev/ttyAMA0endbegin prog = irexec button = KEY_VOLUMEDOWN config = sudo echo -e &quot;AT+CL\r&quot; &gt; /dev/ttyAMA0; cat /dev/ttyAMA0end 编辑完毕后保存退出，重启红外控制服务，然后执行 irexec：12sudo /etc/init.d/lirc restartirexec 最后手机连接蓝牙模块（BK8000L）并播放音乐，用遥控器的按键进行测试。以上代码只写了五个键（上一曲、下一曲、播放/暂停、增加音量、降低音量），更多功能以后再继续添加。]]></content>
      <tags>
        <tag>树莓派</tag>
        <tag>红外</tag>
        <tag>蓝牙</tag>
        <tag>串口</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[树莓派红外遥控测试]]></title>
    <url>%2F2016%2F11%2F19%2FRaspberry-IR-Control%2F</url>
    <content type="text"><![CDATA[网上淘到了一个红外接收器（VS1838B）和一个红外遥控器，准备放到树莓派上学习一下红外控制。 本文参考资料：树莓派的红外遥控树莓派作品：红外遥控+2维度步进电机+超声波测距+语音输出【分享】给树莓派安装红外接收管并控制XBMC（连载二）树莓派 红外接收 RPi2 gpio chip not found lirc_rpi3901方案学习、修改遥控码的方法 目标：给树莓派给安装个红外接收管并遥控它 树莓派一个 红外接收器（本文用的是VS1838B） 红外遥控器 继电器一个（可选，也可用LED等） 杜邦线若干条 具体步骤： 1.首先找到VS1838B的引脚定义：按照图示，把红外接收模块用杜邦线连接到树莓派上。2.安装lirc，修改配置文件LIRC (Linux Infrared remote control)是一个linux系统下开源的软件包。这个软件可以让Linux系统接收及发送红外线信号。12sudo apt-get install lircsudo leafpad /etc/lirc/hardware.conf 修改以下几处：1234LIRCD_ATGS=&quot;&quot;DRIVER=&quot;default&quot;DEVICE=&quot;/dev/lirc0&quot;MODULES=&quot;lirc-rpi 3.终端执行1sudo leafpad /etc/modules 添加下面两行到模块配置文件：1234lirc-dev#我把红外接收模块的OUT接口接到了树莓派的GPIO18#因为本例中未用到红外发射模块，所以后面的gpio_out_pin可以不写lirc-rpi gpio_in_pin=18 gpio_out_pin=17 配置完成后，重启一下树莓派，让配置生效。 4.重新开启lirc功能，至此lirc软件就配置完成了。1sudo /etc/init.d/lirc restart 5.红外线接收功能 首先关闭lirc软件，然后执行如下命令： 12sudo /etc/init.d/lirc stopmode2 -d /dev/lirc0 这时候提示 1no such file or directory 经过查看发现 /dev 下面没有 lirc0 这个module，度娘一番后，发现在/boot/config.txt里面把 1dtoverlay=lirc-rpi 取消注释，然后reboot，问题解决。 再次执行 1mode2 -d /dev/lirc0 用红外遥控器，对着接收器按下任意按键，屏幕会打印类似下面的内容，说明红外接收功能正常。 12345space 16300pulse 95space 28794pulse 80space 19395 6.红外编码录制 首先关闭lirc软件，然后查看可用的按键名 12sudo /etc/init.d/lirc stopirrecord -list-namespace 根据我的遥控器，我选择了以下几个按键名并记录下来： 12345678910KEY_CHANNELDOWNKEY_CHANNELUPKEY_CHANNELKEY_PREVIOUSKEY_NEXTKEY_PLAYKEY_VOLUMEDOWNKEY_VOLUMEUPKEY_EQUALKEY_NUMERIC_0 ~ KEY_NUMERIC_9 然后执行红外线编码录制命令1irrecord -d /dev/lirc0 ~/lircd.conf 一直回车，直到看到“Press RETURN now to start recording.”，再回车一次，然后把遥控器上的每一个按键依次按一下，每个按键持续1s以上，每次按键屏幕上都会出现一个“.”。按满两行后屏幕提示“Please enter the name for the next button (press to finish recording)”，然后依次输入想要录制的按键，例如输入：1KEY_PLAY 然后提示“Now hold down button “KEY_LEFT”.”，这时候按下遥控器上的播放按钮，软件会自动记录并跳转回“Please enter the name for the next button (press to finish recording)”，把每一个想录制的按钮全部输入一遍，最后直接回车结束，配置文件就保存了。最后，将录制好的配置文件覆盖lirc软件的相应文件：1sudo cp ~/lircd.conf /etc/lirc/lircd.conf 重启lirc软件，并执行irw命令，测试遥控器与接收模块是否工作正常：12sudo /etc/init.d/lirc startirw 执行完毕后，按下遥控器的任意键，确保能正确输出所按下按钮的名称。例如：123456789100000000000ffa25d 00 KEY_CHANNELDOWN /etc/lirc/lircd.conf0000000000ffa25d 01 KEY_CHANNELDOWN /etc/lirc/lircd.conf0000000000ffa25d 00 KEY_CHANNELUP /etc/lirc/lircd.conf0000000000ffa25d 01 KEY_CHANNELUP /etc/lirc/lircd.conf0000000000ffa25d 00 KEY_CHANNEL /etc/lirc/lircd.conf0000000000ffa25d 01 KEY_CHANNEL /etc/lirc/lircd.conf0000000000ffa25d 00 KEY_PLAY /etc/lirc/lircd.conf0000000000ffa25d 01 KEY_PLAY /etc/lirc/lircd.conf0000000000ffa25d 00 KEY_VOLUMEUP /etc/lirc/lircd.conf0000000000ffa25d 01 KEY_VOLUMEUP /etc/lirc/lircd.conf 7.配置~/.lircrc文件把按键与需要出发的行为进行关联，在~/.lircrc文件中增加如下内容： 12345678910begin prog = irexec button = KEY_PLAY config = sudo python /home/pi/testIR.pyendbegin prog = irexec button = KEY_CHANNEL config = sudo python /home/pi/test_CHANNEL.pyend 本例中使用继电器测试功能，目的是当按下遥控器的Play按钮时，继电器接通，再次按下时，继电器断开。 关于继电器的连接不再赘述，本例中将继电器的IN接口接到了树莓派的GPIO-27，testIR.py的内容如下： 123456789101112131415161718import RPi.GPIO as GPIOPIN = 27GPIO.setmode(GPIO.BCM)GPIO.setwarnings(False)GPIO.setup(PIN, GPIO.IN)GPIO.setup(PIN, GPIO.OUT)# 本例中GPIO的电平与继电器的开合对应情况为：# 低电平--LOW--input值为0--继电器接通# 高电平--HIGH--input值为1--继电器断开if GPIO.input(PIN) == 0: GPIO.output(PIN, GPIO.HIGH)else: GPIO.output(PIN, GPIO.LOW) 将“.lircrc”文件与上述的py文件放到“/home/pi/“目录下，保存。 最后，重启lirc软件并执行“irexec”命令： 12sudo /etc/init.d/lirc restartirexec 当按下遥控器的Play按钮时，继电器接通，再次按下时，继电器断开。表示测试成功。]]></content>
      <tags>
        <tag>树莓派</tag>
        <tag>红外</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C# WinForm中RichTextBox自动滚动到最新行]]></title>
    <url>%2F2016%2F11%2F08%2FTextBox-AutoScroll%2F</url>
    <content type="text"><![CDATA[C#中一个RichTextBox，当新写入内容时，超过当前显示区域后，没法自动滚动到最低端，不方便查看内容。 【解决方法】在TextBox的TextChanged事件中，添加如下代码： 1234567private void rtbLog_TextChanged(object sender, EventArgs e)&#123; //将光标位置设置到当前内容的末尾 rtbLog.SelectionStart = rtbLog.Text.Length; //滚动到光标位置 rtbLog.ScrollToCaret();&#125; 效果就是所希望的了，当内容变化后，自动滚动到最底端：]]></content>
      <tags>
        <tag>C#</tag>
        <tag>WinForm</tag>
        <tag>TextBox</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[树莓派实现物联网第一步：控制LED]]></title>
    <url>%2F2016%2F09%2F17%2Fraspberry-iot%2F</url>
    <content type="text"><![CDATA[硬件部分 准备材料： 树莓派 面包板（可选） 杜邦线（可选） LED 继电器 LED、继电器等连接到面包板上，继电器连接到树莓派的GPIO11和GPIO13，LED连接到继电器，具体链接方法不再详述； 软件部分 安装FLask(Flask安装教程) 创建led.py，相同目录下创建templates文件夹，里面放一个led.html，代码分别如下：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667from flask import Flask, render_template , requestimport RPi.GPIO as GPIOimport timeGPIO.setmode(GPIO.BOARD)GPIO.setup(11, GPIO.OUT)GPIO.setup(13, GPIO.OUT)GPIO.setup(3, GPIO.OUT)GPIO.setup(5, GPIO.OUT)GPIO.output(11, GPIO.HIGH)GPIO.output(13, GPIO.HIGH)GPIO.output(3, GPIO.LOW)time.sleep(1)GPIO.output(3, GPIO.HIGH)GPIO.output(5, GPIO.LOW)time.sleep(1)GPIO.output(5, GPIO.HIGH)time.sleep(0.1)GPIO.output(5, GPIO.LOW)GPIO.output(3, GPIO.LOW)GPIO.output(13, GPIO.LOW)GPIO.output(11, GPIO.LOW)time.sleep(1)GPIO.output(5, GPIO.HIGH)GPIO.output(3, GPIO.HIGH)GPIO.output(13, GPIO.HIGH)GPIO.output(11, GPIO.HIGH)app = Flask(__name__)a = 'checked'@app.route('/',methods=['GET','POST'])def index(): if request.method =='POST': GPIO.output(5, GPIO.LOW) time.sleep(0.001) GPIO.output(5, GPIO.HIGH) a = request.form["on2"] b = request.form["radio"] if b == 'one': if a == 'on': GPIO.output(11, GPIO.LOW) return render_template('led.html',i = 'ON',a = 'checked') else: GPIO.output(11, GPIO.HIGH) return render_template('led.html',i = 'OFF',a = 'checked') if b == 'two': if a == 'on': GPIO.output(13, GPIO.LOW) return render_template('led.html',j = 'ON',b = 'checked') else: GPIO.output(13, GPIO.HIGH) return render_template('led.html',j = 'OFF',b = 'checked') else: return render_template('led.html',w = 'please choose the botton!') else: GPIO.output(3, GPIO.LOW) time.sleep(0.1) GPIO.output(3, GPIO.HIGH) return render_template('led.html')if __name__ == "__main__": app.run(host='0.0.0.0', port=8888, debug=True) 12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt; &lt;head&gt; &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt; &lt;title&gt;led开关&lt;/title&gt; &lt;link rel="shortcut icon" href="favicon.ico"&gt; &lt;/head&gt; &lt;style&gt; .aa&#123; fontcolor:FOO; &#125; &lt;/style&gt; &lt;body&gt; &lt;center&gt; &lt;h1&gt;led控制&lt;/h1&gt; &lt;h3&gt;&#123;&#123;w&#125;&#125;&lt;/h3&gt; &lt;form id="form1" name="form1" method="post" action=""&gt; &lt;p&gt; &lt;input name="radio" type="radio" id="radio" value="one" &#123;&#123;a&#125;&#125;="&#123;&#123;a&#125;&#125;" /&gt; &lt;label for="radio"&gt;&lt;/label&gt; 开关1&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;input type="radio" name="radio" id="radio" value="two" &#123;&#123;b&#125;&#125;="&#123;&#123;b&#125;&#125;" /&gt; &lt;label for="radio2"&gt;&lt;/label&gt; 开关2 &lt;/p&gt; &lt;p&gt;状态:&#123;&#123;i&#125;&#125; &amp;nbsp;&amp;nbsp;&amp;nbsp; 状态:&#123;&#123;j&#125;&#125;&lt;/p&gt; &lt;p&gt; &lt;input style="width:300px; height:75px; background-color: #0F0; font-size:24px; font-family:Verdana, Geneva, sans-serif; font-weight:bold; color:#FFF" type="submit" name="on2" id="on2" value="on" /&gt; &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt; &lt;input style="width:300px; height:75px; background-color:#F00;font-size:24px; font-family:Verdana, Geneva, sans-serif; font-weight:bold; color:#FFF" type="submit" name="on2" id="on2" value="off" /&gt; &lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt; &lt;/form&gt; &lt;/center&gt; &lt;/body&gt;&lt;/html&gt; 在同一局域网中的其他手机或电脑中输入树莓派的IP地址:8888，即可看到效果： 最后，选择开关1或者开关2，然后点击on或者off，即可看到LED灯会点亮或熄灭。]]></content>
      <tags>
        <tag>树莓派</tag>
        <tag>物联网</tag>
        <tag>IOT</tag>
        <tag>LED</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ActionBar基础：实现顶部返回按钮]]></title>
    <url>%2F2016%2F06%2F22%2FActionBar-TopBackButton%2F</url>
    <content type="text"><![CDATA[在开写之前需要先引入工程包lib_v7_appcompat，里面为我们提供了ActionBarActivity等许多相关类。 先新建一个activity来继承ActionBarActivity，在里面进行一些基本设置，如下：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455/** * ActionBar基础activity，进行统一的属性设置 * 所有顶部带有actionbar的类都继承此类。 * * @author leetoney * @time 2015年1月31日17:28:00 * */public class BaseActionBarActivity extends ActionBarActivity &#123; @Override protected void onCreate(Bundle savedInstanceState) &#123; // TODO Auto-generated method stub super.onCreate(savedInstanceState); // 设置窗口风格为顶部显示Actionbar supportRequestWindowFeature(WindowCompat.FEATURE_ACTION_BAR); ActionBar actionBar = getSupportActionBar(); actionBar.setDisplayShowTitleEnabled(true); actionBar.setDisplayHomeAsUpEnabled(true); // 决定左上角图标的右侧是否有向左的小箭头, true // 有小箭头，并且图标可以点击 actionBar.setDisplayShowHomeEnabled(false); // 使左上角图标是否显示，如果设成false，则没有程序图标，仅仅就个标题， // 否则，显示应用程序图标，对应id为android.R.id.home，对应ActionBar.DISPLAY_SHOW_HOME // force use of overflow menu on devices with menu button // 在actionbar中显示溢出菜单选项 // http://stackoverflow.com/questions/9286822/how-to-force-use-of-overflow-menu-on-devices-with-menu-button try &#123; ViewConfiguration config = ViewConfiguration.get(this); Field menuKeyField = ViewConfiguration.class .getDeclaredField(sHasPermanentMenuKey); if (menuKeyField != null) &#123; menuKeyField.setAccessible(true); menuKeyField.setBoolean(config, false); &#125; &#125; catch (Exception ex) &#123; // Ignore &#125; &#125; @Override public boolean onOptionsItemSelected(MenuItem item) &#123; switch (item.getItemId()) &#123; case android.R.id.home:// 点击返回图标事件 this.finish(); default: return super.onOptionsItemSelected(item); &#125; &#125;&#125; 然后在自己的Activity中继承这个BaseActionBarActivity，这里只设置了标题。123456789public class MainActivity extends BaseActionBarActivity &#123; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); getSupportActionBar().setTitle(返回); &#125;&#125; 效果如图：]]></content>
      <tags>
        <tag>ActionBar</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SQLite数据库的char,varchar,text,nchar,nvarchar,ntext的区别]]></title>
    <url>%2F2016%2F06%2F15%2Fsqlite-data-type%2F</url>
    <content type="text"><![CDATA[CHAR CHAR存储定长数据很方便，CHAR字段上的索引效率级高，比如定义char(10)，那么不论你存储的数据是否达到了10个字节，都要占去10个字节的空间,不足的自动用空格填充。 VARCHAR 存储变长数据，但存储效率没有CHAR高。如果一个字段可能的值是不固定长度的，我们只知道它不可能超过10个字符，把它定义为 VARCHAR(10)是最合算的。VARCHAR类型的实际长度是它的值的实际长度+1。为什么“+1”呢？这一个字节用于保存实际使用了多大的长度。从空间上考虑，用varchar合适；从效率上考虑，用char合适，关键是根据实际情况找到权衡点。 TEXTtext存储可变长度的非Unicode数据，最大长度为2^31-1(2,147,483,647)个字符。 NCHAR、NVARCHAR、NTEXT这三种从名字上看比前面三种多了个“N”。它表示存储的是Unicode数据类型的字符。我们知道字符中，英文字符只需要一个字节存储就足够了，但汉字众多，需要两个字节存储，英文与汉字同时存在时容易造成混乱，Unicode字符集就是为了解决字符集这种不兼容的问题而产生的，它所有的字符都用两个字节表示，即英文字符也是用两个字节表示。nchar、nvarchar的长度是在1到4000之间。和char、varchar比较起来，nchar、nvarchar则最多存储4000个字符，不论是英文还是汉字；而char、varchar最多能存储8000个英文，4000个汉字。可以看出使用nchar、nvarchar数据类型时不用担心输入的字符是英文还是汉字，较为方便，但在存储英文时数量上有些损失。 1所以一般来说，如果含有中文字符，用nchar/nvarchar，如果纯英文和数字，用char/varchar。 SQLite最大的特点在于其数据类型为无数据类型(typelessness)。这意味着可以保存任何类型的数据到所想要保存的任何表的任何列中，无论这列声明的数据类型是什么。虽然在生成表结构的时候，要声明每个域的数据类型，但SQLite并不做任何检查。开发人员要靠自己的程序来控制输入与读出数据的类型。这里有一个例外，就是当主键为整型值时，如果要插入一个非整型值时会产生异常。 虽然，SQLite允许忽略数据类型，但是，仍然建议在Create Table语句中指定数据类型，因为数据类型有利于增强程序的可读性。另外，虽然在插入或读出数据的时候是不区分类型的，但在比较的时候，不同数据类型是有区别的]]></content>
      <tags>
        <tag>SQLite</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CMD命令提示符改编编码命令]]></title>
    <url>%2F2016%2F06%2F08%2Fchcp%2F</url>
    <content type="text"><![CDATA[CMD中修改字符编码的命令为 chcp，以下为帮助文档：12C:\Windows\system32&gt;help chcp 显示或设置活动代码页编号。 CHCP [nnn] nnn指定代码页编号。 不带参数键入 CHCP 以显示活动代码页编号。 输入:1&gt;chcp 65001 设置编码为UTF-8 输入:1chcp 936 设置编码GBK]]></content>
      <tags>
        <tag>CMD</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android Studio 自动提示代码设置]]></title>
    <url>%2F2016%2F06%2F06%2FAndroid-Studio-settings%2F</url>
    <content type="text"><![CDATA[Android Studio中默认设置自动提示代码首字母必须严格按照大小写来输入才能提示正确的代码，修改如下设置项，可实现忽略大小写，自动完成代码。 下面的两个时间为代码提示弹出的速度，单位：毫秒。]]></content>
      <tags>
        <tag>Android Studio</tag>
      </tags>
  </entry>
</search>
